{"remainingRequest":"/Users/Fandy/workspace/e2c/front/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/Fandy/workspace/e2c/front/src/views/LuckySheet/LuckySheet.vue?vue&type=style&index=0&id=2c02c836&scoped=true&lang=css&","dependencies":[{"path":"/Users/Fandy/workspace/e2c/front/src/views/LuckySheet/LuckySheet.vue","mtime":1607587254519},{"path":"/Users/Fandy/workspace/e2c/front/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/Fandy/workspace/e2c/front/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/Fandy/workspace/e2c/front/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/Fandy/workspace/e2c/front/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/Fandy/workspace/e2c/front/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCmgzIHsKICBtYXJnaW46IDQwcHggMCAwOwp9CnVsIHsKICBsaXN0LXN0eWxlLXR5cGU6IG5vbmU7CiAgcGFkZGluZzogMDsKfQpsaSB7CiAgZGlzcGxheTogaW5saW5lLWJsb2NrOwogIG1hcmdpbjogMCAxMHB4Owp9CmEgewogIGNvbG9yOiAjNDJiOTgzOwp9Cg=="},{"version":3,"sources":["LuckySheet.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAwIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"LuckySheet.vue","sourceRoot":"src/views/LuckySheet","sourcesContent":["<template>\n  <div id=\"luckysheet\"\n      style=\"margin:0px;padding:0px;position:absolute;width:100%;left: 0px;top: 0px;bottom:0px;height:100%;display:block;\"\n    ></div>\n</template>\n\n<script>\nimport LuckyExcel from 'luckyexcel';\nimport { title } from '@/settings';\nimport { getToken } from '@/utils/auth';\nimport { mapGetters } from 'vuex'\n\nexport default {\n  name: 'LuckySheet',\n  props: {\n    msg: String\n  },\n  data(){\n    return {\n      selected:\"\",\n      isMaskShow: false,\n      gridKey: this.$route.params.name,\n    }\n  },\n  computed: {\n    ...mapGetters([\n      'uid'\n    ])\n  },\n  mounted() {\n    var vm = this\n    // In some cases, you need to use $nextTick\n    // this.$nextTick(() => {\n          $(function () {\n            luckysheet.create({\n              container: \"luckysheet\",\n              allowEdit:true,\n              allowUpdate: true, //是否允许编辑后的后台更新\n              gridKey: vm.$route.params.name,\n              loadUrl: \"http://127.0.0.1:8000/excel?uid=\"+vm.uid+\"&token=\"+getToken(), // 配置loadUrl的地址，luckysheet会通过ajax请求表格数据，默认载入status为1的sheet数据中的所有data，其余的sheet载入除data字段外的所有字段\n              loadSheetUrl: \"http://127.0.0.1:8000/excel/sheet?uid=\"+vm.uid+\"&token=\"+getToken(), //配置loadSheetUrl的地址，参数为gridKey（表格主键） 和 index（sheet主键合集，格式为[1,2,3]），返回的数据为sheet的data字段数据集合\n              updateUrl: \"ws://127.0.0.1:8001/uid/\"+vm.uid+\"/token/\"+getToken(), //表格数据的更新地址\n              myFolderUrl: \"#/config/index\",\n              title: vm.$route.params.name,\n              lang: \"zh\"\n            });\n          });\n      \n    // });\n  },\n  destroyed () {\n    console.log(luckysheet)\n  },\n  methods:{\n    uploadExcel(evt){\n        const files = evt.target.files;\n        if(files==null || files.length==0){\n            alert(\"No files wait for import\");\n            return;\n        }\n\n        let name = files[0].name;\n        let suffixArr = name.split(\".\"), suffix = suffixArr[suffixArr.length-1];\n        if(suffix!=\"xlsx\"){\n            alert(\"Currently only supports the import of xlsx files\");\n            return;\n        }\n        LuckyExcel.transformExcelToLucky(files[0], function(exportJson, luckysheetfile){\n            \n            if(exportJson.sheets==null || exportJson.sheets.length==0){\n                alert(\"Failed to read the content of the excel file, currently does not support xls files!\");\n                return;\n            }\n            window.luckysheet.destroy();\n            \n            window.luckysheet.create({\n                container: 'luckysheet', //luckysheet is the container id\n                showinfobar:false,\n                data:exportJson.sheets,\n                title:exportJson.info.name,\n                userInfo:exportJson.info.name.creator\n            });\n        });\n    },\n    selectExcel(evt){\n        const value = this.selected;\n        const name = evt.target.options[evt.target.selectedIndex].innerText;\n        \n        if(value==\"\"){\n            return;\n        }\n        this.isMaskShow = true;\n\n        LuckyExcel.transformExcelToLuckyByUrl(value, name, (exportJson, luckysheetfile) => {\n            \n            if(exportJson.sheets==null || exportJson.sheets.length==0){\n                alert(\"Failed to read the content of the excel file, currently does not support xls files!\");\n                return;\n            }\n            \n            this.isMaskShow = false;\n            window.luckysheet.destroy();\n            \n            window.luckysheet.create({\n                container: 'luckysheet', //luckysheet is the container id\n                showinfobar:false,\n                data:exportJson.sheets,\n                title:exportJson.info.name,\n                userInfo:exportJson.info.name.creator\n            });\n        });\n    },\n    downloadExcel(){\n          const value = this.selected;;\n\n          if(value.length==0){\n              alert(\"Please select a demo file\");\n              return;\n          }\n\n          var elemIF = document.getElementById(\"Lucky-download-frame\");\n          if(elemIF==null){\n              elemIF = document.createElement(\"iframe\");\n              elemIF.style.display = \"none\";\n              elemIF.id = \"Lucky-download-frame\";\n              document.body.appendChild(elemIF);\n          }\n          elemIF.src = value;\n    }\n\n  }\n}\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped>\nh3 {\n  margin: 40px 0 0;\n}\nul {\n  list-style-type: none;\n  padding: 0;\n}\nli {\n  display: inline-block;\n  margin: 0 10px;\n}\na {\n  color: #42b983;\n}\n</style>\n"]}]}