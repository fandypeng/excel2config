{"remainingRequest":"/Users/Fandy/workspace/e2c/front/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/Fandy/workspace/e2c/front/src/views/table/index.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/Fandy/workspace/e2c/front/src/views/table/index.vue","mtime":1607586432186},{"path":"/Users/Fandy/workspace/e2c/front/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/Fandy/workspace/e2c/front/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/Fandy/workspace/e2c/front/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/Fandy/workspace/e2c/front/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCB7IGdldExpc3QsIGRlbGV0ZUV4Y2VsLCB1cGRhdGVFeGNlbCwgYWRkRXhjZWwgfSBmcm9tICdAL2FwaS9zaGVldCcKaW1wb3J0IHsgbWFwR2V0dGVycyB9IGZyb20gJ3Z1ZXgnCmltcG9ydCB7IGRlZXBDbG9uZSB9IGZyb20gJ0AvdXRpbHMnCgpjb25zdCBkZWZhdWx0RXhjZWwgPSB7CiAgaWQ6ICcnLAogIG5hbWU6ICcnLAogIG93bmVyOiAnJywKICByZW1hcms6ICcnLAogIGNyZWF0ZV90aW1lOiAnJywKICB1cGRhdGVfdGltZTogJycsCn0KCmV4cG9ydCBkZWZhdWx0IHsKICBjb21wdXRlZDogewogICAgLi4ubWFwR2V0dGVycyhbCiAgICAgICd1aWQnLAogICAgICAnbmFtZScKICAgIF0pCiAgfSwKICBmaWx0ZXJzOiB7CiAgICBzdGF0dXNGaWx0ZXIoc3RhdHVzKSB7CiAgICAgIGNvbnN0IHN0YXR1c01hcCA9IHsKICAgICAgICBwdWJsaXNoZWQ6ICdzdWNjZXNzJywKICAgICAgICBkcmFmdDogJ2dyYXknLAogICAgICAgIGRlbGV0ZWQ6ICdkYW5nZXInCiAgICAgIH0KICAgICAgcmV0dXJuIHN0YXR1c01hcFtzdGF0dXNdCiAgICB9LAogICAgZGF0ZUZpbHRlcihkYXRldGltZSkgewogICAgICByZXR1cm4gbmV3IERhdGUocGFyc2VJbnQoZGF0ZXRpbWUpICogMTAwMCkudG9Mb2NhbGVTdHJpbmcoKS5yZXBsYWNlKC86XGR7MSwyfSQvLCcgJyk7CiAgICB9CiAgfSwKICBkYXRhKCkgewogICAgcmV0dXJuIHsKICAgICAgZXhjZWw6IE9iamVjdC5hc3NpZ24oe30sIGRlZmF1bHRFeGNlbCksCiAgICAgIGxpc3Q6IFtdLAogICAgICBsaXN0TG9hZGluZzogdHJ1ZSwKICAgICAgZGlhbG9nVmlzaWJsZTogZmFsc2UsCiAgICAgIGRpYWxvZ1R5cGU6ICduZXcnLAogICAgfQogIH0sCiAgY3JlYXRlZCgpIHsKICAgIHRoaXMuZXhjZWwub3duZXIgPSB0aGlzLm5hbWUKICAgIHRoaXMuZmV0Y2hEYXRhKCkKICB9LAogIG1ldGhvZHM6IHsKICAgIGZldGNoRGF0YSgpIHsKICAgICAgdGhpcy5saXN0TG9hZGluZyA9IHRydWUKICAgICAgZ2V0TGlzdCh7bGltaXQ6IDEwfSkudGhlbihyZXNwb25zZSA9PiB7CiAgICAgICAgaWYgKHJlc3BvbnNlLmRhdGEubGlzdCAhPSB1bmRlZmluZWQpIHsKICAgICAgICAgIHRoaXMubGlzdCA9IHJlc3BvbnNlLmRhdGEubGlzdAogICAgICAgIH0KICAgICAgICB0aGlzLmxpc3RMb2FkaW5nID0gZmFsc2UKICAgICAgfSkKICAgIH0sCiAgICBoYW5kbGVBZGRFeGNlbCgpIHsKICAgICAgdGhpcy5leGNlbCA9IE9iamVjdC5hc3NpZ24oe30sIGRlZmF1bHRFeGNlbCksCiAgICAgIHRoaXMuZXhjZWwub3duZXIgPSB0aGlzLm5hbWUKICAgICAgdGhpcy5kaWFsb2dUeXBlID0gJ25ldycKICAgICAgdGhpcy5kaWFsb2dWaXNpYmxlID0gdHJ1ZQogICAgfSwKICAgIGFzeW5jIGNvbmZpcm1FeGNlbCgpIHsKICAgICAgY29uc3QgaXNFZGl0ID0gdGhpcy5kaWFsb2dUeXBlID09PSAnZWRpdCcKICAgICAgaWYgKGlzRWRpdCkgewogICAgICAgIGF3YWl0IHVwZGF0ZUV4Y2VsKHRoaXMuZXhjZWwpCiAgICAgICAgZm9yIChsZXQgaW5kZXggPSAwOyBpbmRleCA8IHRoaXMubGlzdC5sZW5ndGg7IGluZGV4KyspIHsKICAgICAgICAgIGlmICh0aGlzLmxpc3RbaW5kZXhdLmlkID09PSB0aGlzLmV4Y2VsLmlkKSB7CiAgICAgICAgICAgIHRoaXMubGlzdC5zcGxpY2UoaW5kZXgsIDEsIE9iamVjdC5hc3NpZ24oe30sIHRoaXMuZXhjZWwpKQogICAgICAgICAgICBicmVhawogICAgICAgICAgfQogICAgICAgIH0KICAgICAgfSBlbHNlIHsKICAgICAgICB2YXIgcGFyYW1zID0gdGhpcy5leGNlbAogICAgICAgIHBhcmFtcy51aWQgPSB0aGlzLnVpZAogICAgICAgIGNvbnN0IHsgZGF0YSB9ID0gYXdhaXQgYWRkRXhjZWwocGFyYW1zKQogICAgICAgIHRoaXMuZXhjZWwuaWQgPSBkYXRhLmlkCiAgICAgICAgdGhpcy5saXN0LnB1c2godGhpcy5leGNlbCkKICAgICAgfQoKICAgICAgY29uc3QgeyBpZCwgbmFtZSwgcmVtYXJrIH0gPSB0aGlzLmV4Y2VsCiAgICAgIHRoaXMuZGlhbG9nVmlzaWJsZSA9IGZhbHNlCiAgICAgIHRoaXMuJG5vdGlmeSh7CiAgICAgICAgdGl0bGU6ICdTdWNjZXNzJywKICAgICAgICBkYW5nZXJvdXNseVVzZUhUTUxTdHJpbmc6IHRydWUsCiAgICAgICAgbWVzc2FnZTogYAogICAgICAgICAgICA8ZGl2PuWQjeensDogJHtuYW1lfTwvZGl2PgogICAgICAgICAgICA8ZGl2PuWkh+azqDogJHtyZW1hcmt9PC9kaXY+CiAgICAgICAgICBgLAogICAgICAgIHR5cGU6ICdzdWNjZXNzJwogICAgICB9KQogICAgfSwKICAgIGhhbmRsZUVkaXQoc2NvcGUpIHsKICAgICAgdGhpcy5kaWFsb2dUeXBlID0gJ2VkaXQnCiAgICAgIHRoaXMuZGlhbG9nVmlzaWJsZSA9IHRydWUKICAgICAgdGhpcy5jaGVja1N0cmljdGx5ID0gdHJ1ZQogICAgICB0aGlzLmV4Y2VsID0gZGVlcENsb25lKHNjb3BlLnJvdykKICAgIH0sCiAgICBoYW5kbGVEZWxldGUoeyRpbmRleCwgcm93fSkgewogICAgICB0aGlzLiRjb25maXJtKCfnoa7lrprliKDpmaTooajmoLzlkJc/JywgJ1dhcm5pbmcnLCB7CiAgICAgICAgY29uZmlybUJ1dHRvblRleHQ6ICfnoa7lrponLAogICAgICAgIGNhbmNlbEJ1dHRvblRleHQ6ICflj5bmtognLAogICAgICAgIHR5cGU6ICd3YXJuaW5nJwogICAgICB9KQogICAgICAudGhlbihhc3luYygpID0+IHsKICAgICAgICBhd2FpdCBkZWxldGVFeGNlbCh7aWQ6IHJvdy5pZCwgbmFtZTogcm93Lm5hbWV9KQogICAgICAgIHRoaXMubGlzdC5zcGxpY2UoJGluZGV4LCAxKQogICAgICAgIHRoaXMuJG1lc3NhZ2UoewogICAgICAgICAgdHlwZTogJ3N1Y2Nlc3MnLAogICAgICAgICAgbWVzc2FnZTogJ+WIoOmZpOaIkOWKnyEnCiAgICAgICAgfSkKICAgICAgfSkKICAgICAgLmNhdGNoKGVyciA9PiB7IGNvbnNvbGUuZXJyb3IoZXJyKSB9KQogICAgfQogIH0KfQo="},{"version":3,"sources":["index.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA+EA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"index.vue","sourceRoot":"src/views/table","sourcesContent":["<template>\n  <div class=\"app-container\">\n\n    <el-button type=\"primary\" @click=\"handleAddExcel\">新增表格</el-button>\n\n    <el-table\n      v-loading=\"listLoading\"\n      :data=\"list\"\n      element-loading-text=\"Loading\"\n      border\n      fit\n      highlight-current-row\n      style=\"width: 100%;margin-top:30px;\"\n    >\n      <!-- <el-table-column align=\"center\" label=\"ID\" width=\"210\">\n        <template slot-scope=\"scope\">\n          {{ scope.row.id }}\n        </template>\n      </el-table-column> -->\n      <el-table-column label=\"名称\" width=\"150\">\n        <template slot-scope=\"scope\">\n            <el-link :href=\"'#/config/excel/' + scope.row.name\" type=\"primary\">{{ scope.row.name }}</el-link>\n        </template>\n      </el-table-column>\n      <el-table-column label=\"创建者\"  align=\"center\" width=\"150\">\n        <template slot-scope=\"scope\">\n          <span>{{ scope.row.owner }}</span>\n        </template>\n      </el-table-column>\n      <el-table-column label=\"备注\"  align=\"center\">\n        <template slot-scope=\"scope\">\n          {{ scope.row.remark }}\n        </template>\n      </el-table-column>\n      <el-table-column label=\"创建时间\" width=\"210\" align=\"center\">\n        <template slot-scope=\"scope\">\n          {{ scope.row.createTime | dateFilter }}\n        </template>\n      </el-table-column>\n      <el-table-column label=\"编辑时间\" width=\"210\" align=\"center\">\n        <template slot-scope=\"scope\">\n          {{ scope.row.editTime | dateFilter }}\n        </template>\n      </el-table-column>\n      <el-table-column class-name=\"status-col\" label=\"操作\" width=\"300\" align=\"center\">\n        <template slot-scope=\"scope\">\n          <el-button type=\"primary\" size=\"small\" @click=\"handleEdit(scope)\">编辑</el-button>\n          <el-button type=\"danger\" size=\"small\" @click=\"handleDelete(scope)\">删除</el-button>\n        </template>\n      </el-table-column>\n    </el-table>\n\n    <el-dialog :visible.sync=\"dialogVisible\" :title=\"dialogType==='edit'?'编辑Excel信息':'新增Excel'\">\n      <el-form :model=\"excel\" label-width=\"80px\" label-position=\"left\">\n        <el-form-item label=\"名称\">\n          <el-input v-model=\"excel.name\" placeholder=\"名称\" :disabled=\"dialogType==='edit'\" />\n        </el-form-item>\n        <el-form-item label=\"备注\">\n          <el-input\n            v-model=\"excel.remark\"\n            :autosize=\"{ minRows: 2, maxRows: 4}\"\n            type=\"textarea\"\n            placeholder=\"备注\"\n          />\n        </el-form-item>\n        <el-form-item label=\"创建者\" v-show=\"dialogType==='edit'\">\n          <el-input v-model=\"excel.owner\" placeholder=\"创建者\" disabled />\n        </el-form-item>\n      </el-form>\n      <div style=\"text-align:right;\">\n        <el-button type=\"danger\" @click=\"dialogVisible=false\">取消</el-button>\n        <el-button type=\"primary\" @click=\"confirmExcel\">保存</el-button>\n      </div>\n    </el-dialog>\n\n  </div>\n</template>\n\n<script>\nimport { getList, deleteExcel, updateExcel, addExcel } from '@/api/sheet'\nimport { mapGetters } from 'vuex'\nimport { deepClone } from '@/utils'\n\nconst defaultExcel = {\n  id: '',\n  name: '',\n  owner: '',\n  remark: '',\n  create_time: '',\n  update_time: '',\n}\n\nexport default {\n  computed: {\n    ...mapGetters([\n      'uid',\n      'name'\n    ])\n  },\n  filters: {\n    statusFilter(status) {\n      const statusMap = {\n        published: 'success',\n        draft: 'gray',\n        deleted: 'danger'\n      }\n      return statusMap[status]\n    },\n    dateFilter(datetime) {\n      return new Date(parseInt(datetime) * 1000).toLocaleString().replace(/:\\d{1,2}$/,' ');\n    }\n  },\n  data() {\n    return {\n      excel: Object.assign({}, defaultExcel),\n      list: [],\n      listLoading: true,\n      dialogVisible: false,\n      dialogType: 'new',\n    }\n  },\n  created() {\n    this.excel.owner = this.name\n    this.fetchData()\n  },\n  methods: {\n    fetchData() {\n      this.listLoading = true\n      getList({limit: 10}).then(response => {\n        if (response.data.list != undefined) {\n          this.list = response.data.list\n        }\n        this.listLoading = false\n      })\n    },\n    handleAddExcel() {\n      this.excel = Object.assign({}, defaultExcel),\n      this.excel.owner = this.name\n      this.dialogType = 'new'\n      this.dialogVisible = true\n    },\n    async confirmExcel() {\n      const isEdit = this.dialogType === 'edit'\n      if (isEdit) {\n        await updateExcel(this.excel)\n        for (let index = 0; index < this.list.length; index++) {\n          if (this.list[index].id === this.excel.id) {\n            this.list.splice(index, 1, Object.assign({}, this.excel))\n            break\n          }\n        }\n      } else {\n        var params = this.excel\n        params.uid = this.uid\n        const { data } = await addExcel(params)\n        this.excel.id = data.id\n        this.list.push(this.excel)\n      }\n\n      const { id, name, remark } = this.excel\n      this.dialogVisible = false\n      this.$notify({\n        title: 'Success',\n        dangerouslyUseHTMLString: true,\n        message: `\n            <div>名称: ${name}</div>\n            <div>备注: ${remark}</div>\n          `,\n        type: 'success'\n      })\n    },\n    handleEdit(scope) {\n      this.dialogType = 'edit'\n      this.dialogVisible = true\n      this.checkStrictly = true\n      this.excel = deepClone(scope.row)\n    },\n    handleDelete({$index, row}) {\n      this.$confirm('确定删除表格吗?', 'Warning', {\n        confirmButtonText: '确定',\n        cancelButtonText: '取消',\n        type: 'warning'\n      })\n      .then(async() => {\n        await deleteExcel({id: row.id, name: row.name})\n        this.list.splice($index, 1)\n        this.$message({\n          type: 'success',\n          message: '删除成功!'\n        })\n      })\n      .catch(err => { console.error(err) })\n    }\n  }\n}\n</script>\n"]}]}