{"remainingRequest":"/Users/Fandy/go/src/excel2config/front/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/Fandy/go/src/excel2config/front/src/views/table/index.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/Fandy/go/src/excel2config/front/src/views/table/index.vue","mtime":1618836133148},{"path":"/Users/Fandy/go/src/excel2config/front/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/Fandy/go/src/excel2config/front/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/Fandy/go/src/excel2config/front/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/Fandy/go/src/excel2config/front/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["index.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAmfile":"index.vue","sourceRoot":"src/views/table","sourcesContent":["<template>\n  <div class=\"app-container\">\n    <el-tabs type=\"border-card\">\n      <el-tab-pane label=\"配置列表\">\n        <div class=\"operate-box\">\n          <el-button :type=\"groupInfo.IsDev ? 'primary': 'danger'\" @click=\"handleSwitchEnv\">\n            <span v-if=\"groupInfo.IsDev === true\">当前处于测试环境，点击切换到正式环境</span>\n            <span v-else>当前处于正式环境，点击切换到测试环境</span>\n          </el-button>\n          <el-button v-show=\"groupInfo.IsDev\" type=\"primary\" @click=\"handleAddExcel\">添加表格</el-button>\n        </div>\n        <el-table\n          v-loading=\"listLoading\"\n          :data=\"list\"\n          element-loading-text=\"Loading\"\n          border\n          fit\n          highlight-current-row\n          style=\"width: 100%;margin-top:30px;\"\n        >\n          <!-- <el-table-column align=\"center\" label=\"ID\" width=\"210\">\n            <template slot-scope=\"scope\">\n              {{ scope.row.id }}\n            </template>\n          </el-table-column> -->\n          <el-table-column label=\"名称\" width=\"150\">\n            <template slot-scope=\"scope\">\n                <el-link :href=\"'#/config/excel/' + scope.row.name + '/' + scope.row.id\"  type=\"primary\">{{ scope.row.name }}</el-link>\n            </template>\n          </el-table-column>\n          <el-table-column label=\"创建者\"  align=\"center\" width=\"150\">\n            <template slot-scope=\"scope\">\n              <span>{{ scope.row.owner }}</span>\n            </template>\n          </el-table-column>\n          <el-table-column label=\"备注\"  align=\"center\">\n            <template slot-scope=\"scope\">\n              {{ scope.row.remark }}\n            </template>\n          </el-table-column>\n          <el-table-column label=\"创建时间\" width=\"210\" align=\"center\">\n            <template slot-scope=\"scope\">\n              {{ scope.row.createTime | dateFilter }}\n            </template>\n          </el-table-column>\n          <el-table-column label=\"编辑时间\" width=\"210\" align=\"center\">\n            <template slot-scope=\"scope\">\n              {{ scope.row.editTime | dateFilter }}\n            </template>\n          </el-table-column>\n          <el-table-column class-name=\"status-col\" label=\"发布\" width=\"300\" align=\"center\">\n            <template slot-scope=\"scope\">\n              <el-button type=\"success\" size=\"small\" @click=\"handleExport(scope)\">发布</el-button>\n              <el-button type=\"info\" size=\"small\" @click=\"handleExportRecord(scope)\">记录</el-button>\n            </template>\n          </el-table-column>\n          <el-table-column class-name=\"status-col\" label=\"同步正式环境\" width=\"300\" align=\"center\">\n            <template slot-scope=\"scope\">\n              <el-button v-show=\"groupInfo.IsDev\" type=\"warning\" size=\"small\" @click=\"handleExportProd(scope)\">同步正式环境</el-button>\n            </template>\n          </el-table-column>\n          <el-table-column class-name=\"status-col\" label=\"管理\" width=\"300\" align=\"center\">\n            <template slot-scope=\"scope\">\n              <el-button type=\"primary\" size=\"small\" @click=\"handleEdit(scope)\">编辑</el-button>\n              <el-button type=\"danger\" size=\"small\" @click=\"handleDelete(scope)\">删除</el-button>\n            </template>\n          </el-table-column>\n        </el-table>\n\n        <el-dialog :visible.sync=\"dialogVisible\" :title=\"dialogType==='edit'?'编辑Excel信息':'新增Excel'\">\n          <el-form :model=\"excel\" label-width=\"80px\" label-position=\"left\">\n            <el-form-item label=\"名称\">\n              <el-input v-model=\"excel.name\" placeholder=\"名称\" :disabled=\"dialogType==='edit'\" />\n            </el-form-item>\n            <el-form-item label=\"备注\">\n              <el-input\n                v-model=\"excel.remark\"\n                :autosize=\"{ minRows: 2, maxRows: 4}\"\n                type=\"textarea\"\n                placeholder=\"备注\"\n              />\n            </el-form-item>\n            <el-form-item label=\"创建者\" v-show=\"dialogType==='edit'\">\n              <el-input v-model=\"excel.owner\" placeholder=\"创建者\" disabled />\n            </el-form-item>\n          </el-form>\n          <div style=\"text-align:right;\">\n            <el-button type=\"danger\" @click=\"dialogVisible=false\">取消</el-button>\n            <el-button type=\"primary\" @click=\"confirmExcel\">保存</el-button>\n          </div>\n        </el-dialog>\n\n        <el-dialog :visible.sync=\"exportDialogVisible\" title=\"发布表格内容\" width=\"80%\">\n          <div v-loading=\"dialogLoading\">\n            <div style=\"float: left;width: 50%; padding:20px;\">\n              <el-form label-width=\"120px\" label-position=\"left\">\n                <el-form-item label=\"选择表格\">\n                  <el-radio-group v-model=\"sleectedSheet\" @change=\"onSelectedSheetChange(1)\">\n                    <el-radio v-for=\"item in sheetList\" :key=\"item\" :label=\"item\" >{{item}} </el-radio>\n                  </el-radio-group>\n                </el-form-item>\n                <el-form-item label=\"发布内容\">\n                  <el-input\n                    type=\"textarea\"\n                    autosize\n                    placeholder=\"请输入发布内容\"\n                    v-model=\"exportRemark\">\n                  </el-input>\n                </el-form-item>\n                <el-form-item label=\"导出\">\n                  <el-button type=\"primary\" @click=\"exportJsonFile\">导出JSON</el-button>\n                </el-form-item>\n              </el-form>\n            </div>\n            <div style=\"float: left;width: 50%;padding:20px;\">\n              <el-form label-width=\"120px\" label-position=\"left\">\n                <el-form-item label=\"对比设置\">\n                </el-form-item>\n                <el-form-item label=\"差异显示行数\">\n                  <el-input type=\"number\" placeholder=\"10\" v-model=\"contextRowLength\"></el-input>\n                </el-form-item>\n              </el-form>\n            </div>\n            <div style=\"width: 100%;text-align: center;clear: both;\">\n              <p style=\"font-size: 18px;font-weight: bold;width: 50%;float: left;\">修改前版本</p>\n              <p style=\"font-size: 18px;font-weight: bold;width: 50%;float: left;\">修改后版本</p>\n            </div>\n            <div style=\"margin-top: 80px;\">\n              <code-diff :old-string=\"codeDiff.beforeExportStr\" :new-string=\"codeDiff.exportStr\" :isShowNoChange=\"true\" :renderNothingWhenEmpty=\"false\" outputFormat=\"side-by-side\"  :context=\"contextRowLength\" />\n            </div>\n          </div>\n          <div style=\"text-align:right;\">\n            <el-button type=\"danger\" @click=\"exportDialogVisible=false\">取消</el-button>\n            <el-button type=\"primary\" @click=\"confirmExport\">发布</el-button>\n          </div>\n        </el-dialog>\n\n        <el-dialog :visible.sync=\"exportProdDialogVisible\" title=\"同步表格内容到正式环境\" width=\"80%\">\n          <div v-loading=\"dialogLoading\">\n            <div style=\"float: left;width: 50%;padding:20px;\">\n              <el-form :model=\"excel\" label-width=\"120px\" label-position=\"left\">\n                <el-form-item label=\"选择表格\">\n                  <el-radio-group v-model=\"sleectedSheet\" @change=\"onSelectedSheetChange(2)\">\n                    <el-radio v-for=\"item in sheetList\" :key=\"item\" :label=\"item\" >{{item}} </el-radio>\n                  </el-radio-group>\n                </el-form-item>\n              </el-form>\n            </div>\n            <div style=\"float: left;width: 50%;padding:20px;\">\n              <el-form label-width=\"120px\" label-position=\"left\">\n                <el-form-item label=\"对比设置\">\n                </el-form-item>\n                <el-form-item label=\"差异显示行数\">\n                  <el-input type=\"number\" placeholder=\"10\" v-model=\"contextRowLength\"></el-input>\n                </el-form-item>\n              </el-form>\n            </div>\n            <div style=\"width: 100%;text-align: center;clear: both;\">\n              <p style=\"font-size: 18px;font-weight: bold;width: 50%;float: left;\">正式环境版本</p>\n              <p style=\"font-size: 18px;font-weight: bold;width: 50%;float: left;\">测试环境版本</p>\n            </div>\n            <div style=\"margin-top: 80px;\">\n              <code-diff :old-string=\"codeDiff.beforeExportProdStr\" :new-string=\"codeDiff.exportProdStr\" :isShowNoChange=\"true\" :renderNothingWhenEmpty=\"false\" outputFormat=\"side-by-side\" :context=\"contextRowLength\" />\n            </div>\n          </div>\n          <div style=\"text-align:right;\">\n            <el-button type=\"danger\" @click=\"exportProdDialogVisible=false\">取消</el-button>\n            <el-button type=\"primary\" @click=\"confirmExportProd\">同步</el-button>\n          </div>\n        </el-dialog>\n\n        <el-dialog :visible.sync=\"exportRecordDialogVisible\" title=\"发布记录\" width=\"80%\">\n          <div v-loading=\"dialogLoading\">\n            <div style=\"float: left;width: 50%; padding:20px;\">\n              <el-form :model=\"excel\" label-width=\"120px\" label-position=\"left\">\n                <el-form-item label=\"选择表格\">\n                  <el-radio-group v-model=\"sleectedSheet\" @change=\"onSelectedSheetChange(3)\">\n                    <el-radio v-for=\"item in sheetList\" :key=\"item\" :label=\"item\" >{{item}} </el-radio>\n                  </el-radio-group>\n                </el-form-item>\n                <el-form-item label=\"发布记录\">\n                  <el-select v-model=\"selectRecordId\" @change=\"onSelectRecordChange()\" filterable placeholder=\"选择历史发布记录\" style=\"width:90%;\">\n                    <el-option\n                      v-for=\"item in recordList\"\n                      :key=\"item.id\"\n                      :label=\"item.remark\"\n                      :value=\"item.id\">\n                      <span style=\"float: left;margin-right:100px;\">{{ item.remark }}</span>\n                      <span style=\"float: right; color: #8492a6; font-size: 13px\">{{ item.userName }} 发布于 {{ item.time }}</span>\n                    </el-option>\n                  </el-select>\n                  <el-button style=\"margin-top: 20px;\" type=\"danger\" @click=\"handleRollBack\">回退到此版本</el-button>\n                </el-form-item>\n              </el-form>\n            </div>\n            <div style=\"float: left;width: 50%;padding:20px;\">\n              <el-form label-width=\"120px\" label-position=\"left\">\n                <el-form-item label=\"对比设置\">\n                </el-form-item>\n                <el-form-item label=\"差异显示行数\">\n                  <el-input type=\"number\" placeholder=\"10\" v-model=\"contextRowLength\"></el-input>\n                </el-form-item>\n              </el-form>\n            </div>\n            <div style=\"width: 100%;text-align: center; clear: both;\">\n              <p style=\"font-size: 18px;font-weight: bold;width: 50%;float: left;\">发布前版本</p>\n              <p style=\"font-size: 18px;font-weight: bold;width: 50%;float: left;\">发布后版本</p>\n            </div>\n            <div style=\"margin-top: 80px;\">\n              <code-diff :old-string=\"codeDiff.beforeExportRecordStr\" :new-string=\"codeDiff.exportRecordStr\" :isShowNoChange=\"true\" :renderNothingWhenEmpty=\"false\" outputFormat=\"side-by-side\" :context=\"contextRowLength\" />\n            </div>\n          </div>\n        </el-dialog>\n\n      </el-tab-pane>\n\n\n      <el-tab-pane label=\"项目配置\">\n        <el-form ref=\"form\" :model=\"groupInfo\" label-width=\"120px\">\n          <el-form-item label=\"名称\">\n            <el-input v-model=\"groupInfo.name\" value=\"贪吃蛇大作战\" />\n          </el-form-item>\n          <el-form-item label=\"头像\">\n            <el-col :span=\"11\">\n              <img id=\"group-icon\" v-bind:src=\"groupInfo.avatar\" alt=\"\">\n              <input class=\"avatar-input\" type=\"file\" accept=\"image/*\" @change=\"uploadAvatar\" name=\"avatar\"   />\n            </el-col>\n          </el-form-item>\n          <br>\n          <el-form-item label=\"备注\">\n            <el-input v-model=\"groupInfo.remark\" type=\"textarea\" />\n          </el-form-item>\n          <el-form-item label=\"数据仓库\">\n            <el-checkbox-group v-model=\"groupInfo.store\" style=\"padding: 5px 15px;\">\n              <el-checkbox v-for=\"item in storeOptions\" :key=\"item.key\" :label=\"item.key\">\n                {{ item.name }}\n              </el-checkbox>\n            </el-checkbox-group>\n          </el-form-item>\n          <el-form-item v-show=\"inArray(groupInfo.store, 1)\" label=\"Redis配置\" class=\"store-group\">\n            <el-form-item label=\"RedisDSN\">\n              <el-input v-model=\"groupInfo.RedisDSN\" name=\"RedisDSN\" type=\"text\" placeholder=\"172.2.1.88:6379\" />\n            </el-form-item>\n            <el-form-item label=\"密码\">\n              <el-input v-model=\"groupInfo.RedisPassword\" name=\"RedisPassword\" auto-complete=\"new-password\" type=\"password\" placeholder=\"password\" />\n            </el-form-item>\n            <el-form-item label=\"KeyPrefix\">\n              <el-input v-model=\"groupInfo.RedisKeyPrefix\" type=\"text\" placeholder=\"key prefix 可不填\" />\n            </el-form-item>\n            <el-tag type=\"danger\" style=\"margin-left: 40px;\" >\n              应用可以通过订阅redis的channel：{{groupInfo.RedisKeyPrefix}}config_refresh 获取配置更新的通知，message为更新的表名\n            </el-tag>\n            <el-form-item label=\" \">\n              <el-button type=\"success\" @click=\"testRedisConnection\">测试连通性</el-button>\n            </el-form-item>\n          </el-form-item>\n\n          <el-form-item v-show=\"inArray(groupInfo.store, 2)\" label=\"Mysql配置\" class=\"store-group\">\n            <el-form-item label=\"MysqlDSN\">\n              <el-input v-model=\"groupInfo.MysqlDSN\" type=\"text\" placeholder=\"username:password@tcp(172.2.1.88:3306)/dbname?charset=utf8mb4\" />\n            </el-form-item>\n            <el-form-item label=\" \">\n              <el-button type=\"success\" @click=\"testMysqlConnection\">测试连通性</el-button>\n            </el-form-item>\n          </el-form-item>\n\n          <el-form-item v-show=\"inArray(groupInfo.store, 3)\" label=\"Mongodb配置\" class=\"store-group\">\n            <el-form-item label=\"MongodbDSN\">\n              <el-input v-model=\"groupInfo.MongodbDSN\" type=\"text\" placeholder=\"mongodb://username:password@127.0.0.1:27017/?authSource=dbname\" />\n            </el-form-item>\n            <el-form-item label=\" \">\n              <el-button type=\"success\" @click=\"testMongodbConnection\">测试连通性</el-button>\n            </el-form-item>\n          </el-form-item>\n\n          <el-form-item v-show=\"inArray(groupInfo.store, 4)\" label=\"Databus配置\" class=\"store-group\">\n            <el-form-item label=\"GrpcDSN\">\n              <el-input v-model=\"groupInfo.GrpcDSN\" name=\"GrpcDSN\" type=\"text\" placeholder=\"172.2.1.88:10000\" />\n            </el-form-item>\n            <el-form-item label=\"GrpcAppKey\">\n              <el-input v-model=\"groupInfo.GrpcAppKey\" name=\"GrpcAppKey\" type=\"text\" placeholder=\"appKey\" />\n            </el-form-item>\n            <el-form-item label=\"GrpcAppSecret\">\n              <el-input v-model=\"groupInfo.GrpcAppSecret\" name=\"GrpcAppSecret\" type=\"text\" placeholder=\"appSecret\" />\n            </el-form-item>\n            <el-tag type=\"danger\" style=\"margin-left: 40px;\" >\n              请参阅Readme.md文档搭建e2cdatabus服务器\n            </el-tag>\n            <el-form-item label=\" \">\n              <el-button type=\"primary\" @click=\"generateAppKeySecretHandler\">获取AppKey和AppSecret</el-button>\n              <el-button type=\"success\" @click=\"testGRpcConnection\">测试连通性</el-button>\n            </el-form-item>\n          </el-form-item>\n\n          <el-form-item>\n            <el-button type=\"primary\" @click=\"saveGroupConfig\">保存</el-button>\n          </el-form-item>\n        </el-form>\n      </el-tab-pane>\n      <el-tab-pane label=\"项目成员\">\n        <el-button type=\"primary\" @click=\"handleAddMember\">添加成员</el-button>\n        <el-table\n          v-loading=\"listLoading\"\n          :data=\"groupInfo.members\"\n          element-loading-text=\"Loading\"\n          border\n          fit\n          highlight-current-row\n          style=\"width: 100%;margin-top:30px;\"\n        >\n        <!-- <el-table-column label=\"头像\"  align=\"center\" >\n            <template slot-scope=\"scope\">\n              <img :src=\"scope.row.avatar\" style=\"width:60px;border-radius:50%;\" alt=\"\">\n            </template>\n          </el-table-column> -->\n          <el-table-column label=\"昵称\"  align=\"center\" >\n            <template slot-scope=\"scope\">\n              <span>{{ scope.row.userName }}</span>\n            </template>\n          </el-table-column>\n\n          <el-table-column class-name=\"status-col\" label=\"操作\" width=\"300\" align=\"center\">\n            <template slot-scope=\"scope\">\n              <el-button v-show=\"isGroupOwner(scope)\" type=\"danger\" size=\"small\" @click=\"handleDeleteMember(scope)\">删除</el-button>\n              <el-tag v-show=\"groupInfo.owner === scope.row.uid\">管理员</el-tag>\n            </template>\n          </el-table-column>\n        </el-table>\n\n        <el-dialog :visible.sync=\"addMemberdialogVisible\" title=\"添加成员\" width=\"500px\">\n          <el-form label-width=\"80px\" label-position=\"left\">\n            <el-form-item label=\"名称\">\n              <el-autocomplete\n                v-model=\"searchUserName\"\n                :fetch-suggestions=\"querySearchAsync\"\n                placeholder=\"请输入名称:\"\n                clearable\n                :trigger-on-focus=\"false\"\n                @select=\"handleSelect\"\n              ></el-autocomplete>\n            </el-form-item>\n          </el-form>\n          <br>\n          <div style=\"text-align:right;\">\n            <el-button type=\"danger\" @click=\"addMemberdialogVisible=false\">取消</el-button>\n            <el-button type=\"primary\" @click=\"addMember()\">保存</el-button>\n          </div>\n        </el-dialog>\n      </el-tab-pane>\n    </el-tabs>\n\n  </div>\n</template>\n\n<script>\nimport { getList, deleteExcel, updateExcel, addExcel, exportExcel, getSheetList, exportExcelProd } from '@/api/sheet'\nimport { searchUser } from '@/api/user'\nimport { groupUpdate, groupTestConnection, getConfigFromDB, exportConfigToDB, generateAppKeySecret,\n  groupList, syncToProd, exportRecord, exportRecordContent, exportRollback } from '@/api/group'\nimport { mapGetters } from 'vuex'\nimport { deepClone } from '@/utils'\nimport CodeDiff from 'vue-code-diff'\nimport { MessageBox } from 'element-ui'\nimport { codemirror } from 'vue-codemirror'\nimport 'codemirror/lib/codemirror.css'\n\nconst defaultExcel = {\n  id: '',\n  name: '',\n  owner: '',\n  remark: '',\n  create_time: '',\n  update_time: ''\n}\n\nexport default {\n  components: { CodeDiff,codemirror },\n  computed: {\n    ...mapGetters([\n      'uid',\n      'name'\n    ])\n  },\n  filters: {\n    statusFilter(status) {\n      const statusMap = {\n        published: 'success',\n        draft: 'gray',\n        deleted: 'danger'\n      }\n      return statusMap[status]\n    },\n    dateFilter(datetime) {\n      return new Date(parseInt(datetime) * 1000).toLocaleString().replace(/:\\d{1,2}$/,' ');\n    }\n  },\n  data() {\n    return {\n      excel: Object.assign({}, defaultExcel),\n      list: [],\n      listLoading: true,\n      dialogLoading: false,\n      dialogVisible: false,\n      dialogType: 'new',\n      exportDialogVisible: false,\n      exportFormat: '',\n      form: {},\n      groupInfo: {\n        name: '贪吃蛇大作战',\n        remark: '这是贪吃蛇大作战App项目',\n        avatar: require('../../icons/tanchishe-icon.png'),\n        store: []\n      },\n      storeOptions: [\n        { key: 1, name: 'Redis' },\n        { key: 2, name: 'Mysql' },\n        // {key: 'Mongodb', name: 'Mongodb'},\n        { key: 4, name: 'Databus' }\n      ],\n      addMemberdialogVisible: false,\n      searchUserName: '',\n      searchUid: '',\n      compareVisable: false,\n      sheetList: [],\n      sleectedSheet: '',\n      exportProdDialogVisible: false,\n      exportRecordDialogVisible: false,\n      selectRecordId: '',\n      recordList: [],\n      exportRemark: '',\n      contextRowLength: 10,\n      codeDiff: {\n        beforeExportStr: '',\n        exportStr: '',\n        beforeExportProdStr: '',\n        exportProdStr: '',\n        beforeExportRecordStr: '',\n        exportRecordStr: '',\n      }\n    }\n  },\n  created() {\n    this.excel.owner = this.name\n    this.fetchData()\n  },\n  methods: {\n    fetchData() {\n      this.listLoading = true\n      var groupInfo = localStorage.getItem('groupInfo')\n      groupInfo = JSON.parse(groupInfo)\n      console.log(groupInfo)\n      if (groupInfo === null) {\n        this.$router.push({\n          path: '/'\n        })\n        return\n      }\n      if (groupInfo.store === undefined || groupInfo.store === null) {\n        groupInfo.store = []\n      }\n      this.groupInfo = groupInfo\n      getList({limit: 10, group_id: groupInfo.gid}).then(response => {\n        if (response.data.list !== undefined) {\n          this.list = response.data.list\n        }\n        this.listLoading = false\n      })\n    },\n    handleAddExcel() {\n      this.excel = Object.assign({}, defaultExcel),\n      this.excel.owner = this.name\n      this.dialogType = 'new'\n      this.dialogVisible = true\n    },\n    handleSwitchEnv() {\n      var text = '当前处于正式环境，是否确认切换到测试环境'\n      if (this.groupInfo.IsDev) {\n        text = '当前处于测试环境，是否确认切换到正式环境'\n      }\n      MessageBox.confirm(text, '提示', {\n        confirmButtonText: '确定',\n        cancelButtonText: '取消',\n        type: 'warning'\n      }).then(res => {\n        if (res === undefined) {\n          return\n        }\n        var unionGid = this.groupInfo.UnionGroupId\n        groupList(unionGid).then(response => {\n          if (response.data.list !== undefined && response.data.list.length > 0) {\n            this.groupInfo = response.data.list[0]\n            localStorage.setItem('groupInfo', JSON.stringify(this.groupInfo))\n            // refresh\n            var path = this.$route.path\n            this.$router.push({\n              path,\n              query: {\n                t: +new Date() //保证每次点击路由的query项都是不一样的，确保会重新刷新view\n              }\n            })\n            this.fetchData()\n          } else{\n            this.$message({\n              type: 'warning',\n              message: '暂无权限，请联系管理员添加权限'\n            })\n          }\n        })\n      }).catch(e => {\n        console.log(e)\n      })\n    },\n    async confirmExcel() {\n      if (this.excel.name.length === 0) {\n        this.$message({\n          type: 'warning',\n          message: '请输入名称'\n        })\n        return\n      }\n      const isEdit = this.dialogType === 'edit'\n      if (isEdit) {\n        await updateExcel(this.excel)\n        for (let index = 0; index < this.list.length; index++) {\n          if (this.list[index].id === this.excel.id) {\n            this.list.splice(index, 1, Object.assign({}, this.excel))\n            break\n          }\n        }\n      } else {\n        var params = this.excel\n        params.uid = this.uid\n        params.group_id = this.groupInfo.gid\n        const { data } = await addExcel(params)\n        this.excel.id = data.eid\n        var timestamp=new Date().getTime()\n        this.excel.createTime = timestamp/1000\n        this.excel.editTime = timestamp/1000\n        this.list.push(this.excel)\n      }\n\n      const { id, name, remark } = this.excel\n      this.dialogVisible = false\n      this.$notify({\n        title: 'Success',\n        dangerouslyUseHTMLString: true,\n        message: `\n            <div>名称: ${name}</div>\n            <div>备注: ${remark}</div>\n          `,\n        type: 'success'\n      })\n    },\n    handleEdit(scope) {\n      this.dialogType = 'edit'\n      this.dialogVisible = true\n      this.checkStrictly = true\n      this.excel = deepClone(scope.row)\n    },\n    handleDelete({$index, row}) {\n      this.$confirm('确定删除表格吗?', 'Warning', {\n        confirmButtonText: '确定',\n        cancelButtonText: '取消',\n        type: 'warning'\n      }).then(async() => {\n        await deleteExcel({id: row.id, name: row.name})\n        this.list.splice($index, 1)\n        this.$message({\n          type: 'success',\n          message: '删除成功!'\n        })\n      }).catch(err => { console.error(err) })\n    },\n    handleExport(scope) {\n      this.excel = deepClone(scope.row)\n      this.exportDialogVisible = true\n      this.sheetList = []\n      this.codeDiff.beforeExportStr = ''\n      this.codeDiff.exportStr = ''\n      this.exportRemark = ''\n      this.dialogLoading = true\n      getSheetList({gridKey: this.excel.id}).then(response => {\n        if (response.code === 0) {\n          this.sheetList = response.data.sheetName\n          console.log(this.sheetList)\n          if (this.sheetList.length > 0) {\n            this.sleectedSheet = this.sheetList[0]\n          }\n          this.getExcelSheetContent(this.excel.id, this.sleectedSheet)\n          this.getExcelSheetFromDB(this.excel.id, this.sleectedSheet)\n        }\n      })\n    },\n    handleExportProd(scope) {\n      this.excel = deepClone(scope.row)\n      this.exportProdDialogVisible = true\n      this.sheetList = []\n      this.codeDiff.beforeExportProdStr = ''\n      this.codeDiff.exportProdStr = ''\n      this.dialogLoading = true\n      getSheetList({gridKey: this.excel.id}).then(response => {\n        if (response.code === 0) {\n          this.sheetList = response.data.sheetName\n          console.log(this.sheetList)\n          if (this.sheetList.length > 0) {\n            this.sleectedSheet = this.sheetList[0]\n          }\n          this.getExcelSheetContent(this.excel.id, this.sleectedSheet)\n          this.getExcelSheetFromProd(this.excel.id, this.sleectedSheet)\n        }\n      })\n    },\n    handleExportRecord(scope) {\n      this.excel = deepClone(scope.row)\n      this.exportRecordDialogVisible = true\n      this.sheetList = []\n      this.exportRecord = []\n      this.codeDiff.beforeExportRecordStr = ''\n      this.codeDiff.exportRecordStr = ''\n      this.dialogLoading = true\n      getSheetList({gridKey: this.excel.id}).then(response => {\n        if (response.code === 0) {\n          this.sheetList = response.data.sheetName\n          console.log(this.sheetList)\n          if (this.sheetList.length > 0) {\n            this.sleectedSheet = this.sheetList[0]\n          }\n          // 获取record list\n          this.getRecordList()\n        }\n      })\n    },\n    getRecordList() {\n      exportRecord({gridKey: this.excel.id, sheetName: this.sleectedSheet}).then(resp => {\n        if (resp.data !== null) {\n          this.recordList = resp.data.list\n        }\n        if (this.recordList.length > 0) {\n          this.selectRecordId = this.recordList[0].id\n        }\n        this.refreshRecordContent()\n      })\n    },\n    refreshRecordContent() {\n      var lastRecordId = ''\n      // 判断是否有上一个record\n      for (var i=0;i<this.recordList.length;i++) {\n        if (this.recordList[i].id === this.selectRecordId) {\n          if (i+1<this.recordList.length) {\n            console.log('record：', this.recordList[i+1])\n            lastRecordId = this.recordList[i+1].id\n          }\n        }\n      }\n      this.getExcelSheetFromRecord(this.excel.id, this.sleectedSheet, this.selectRecordId)\n      this.getExcelSheetFromRecord(this.excel.id, this.sleectedSheet, lastRecordId)\n    },\n    async getExcelSheetContent(gridKey, sheetName) {\n      this.codeDiff.exportStr = ''\n      var params = {}\n      params.gridKey = gridKey\n      params.sheetName = sheetName\n      params.format = 'json'\n      console.log('start export excel')\n      const { data } = await exportExcel(params)\n      console.log('end export excel')\n      if (data.jsonstr !== undefined && data.jsonstr.length > 0) {\n        this.codeDiff.exportStr = data.jsonstr\n        console.log('end set export excel')\n        this.dialogLoading = false\n      }\n    },\n    async getExcelSheetFromDB(gridKey, sheetName) {\n      this.codeDiff.beforeExportStr = ''\n      var params = {}\n      params.gridKey = gridKey\n      params.sheetName = sheetName\n      const { data } = await getConfigFromDB(params)\n      if (data.jsonstr !== undefined && data.jsonstr.length > 0) {\n        this.codeDiff.beforeExportStr = data.jsonstr\n        this.dialogLoading = false\n      }\n    },\n    async getExcelSheetFromProd(gridKey, sheetName) {\n      this.codeDiff.beforeExportProdStr = ''\n      var params = {}\n      params.gridKey = gridKey\n      params.sheetName = sheetName\n      params.format = 'json'\n      params.gid = this.groupInfo.gid\n      const { data } = await exportExcelProd(params)\n      if (data.jsonstr !== undefined && data.jsonstr.length > 0) {\n        this.codeDiff.beforeExportProdStr = data.jsonstr\n        this.dialogLoading = true\n      }\n    },\n    async getExcelSheetFromRecord(gridKey, sheetName, recordId) {\n      if (recordId === this.selectRecordId) {\n        this.codeDiff.exportRecordStr = ''\n      } else {\n        this.codeDiff.beforeExportRecordStr = ''\n      }\n      if (recordId.length === 0) {\n        return\n      }\n      var params = {}\n      params.gridKey = gridKey\n      params.sheetName = sheetName\n      params.recordId = recordId\n      params.format = 'json'\n      const { data } = await exportRecordContent(params)\n      if (data.jsonstr !== undefined && data.jsonstr.length > 0) {\n        if (recordId === this.selectRecordId) {\n          this.codeDiff.exportRecordStr = data.jsonstr\n          this.dialogLoading = false\n        } else {\n          this.codeDiff.beforeExportRecordStr = data.jsonstr\n          this.dialogLoading = false\n        }\n      }\n    },\n    handleRollBack() {\n      var text = '您当前选择的配置表是 \\\"' + this.sleectedSheet + '\\\", 确认要回退版本吗？'\n      MessageBox.confirm(text, '提示', {\n        confirmButtonText: '确定',\n        cancelButtonText: '取消',\n        type: 'warning'\n      }).then(res => {\n        if (res === undefined) {\n          return\n        }\n        var params = {}\n        params.gridKey = this.excel.id\n        params.sheetName = this.sleectedSheet\n        params.recordId = this.selectRecordId\n        exportRollback(params).then(response => {\n          if (response.code !== 0) {\n              this.$notify({\n                title: '回退失败',\n                dangerouslyUseHTMLString: true,\n                message: response.data.msg,\n                type: 'error'\n              })\n            } else {\n              this.$notify({\n                title: '回退成功',\n                dangerouslyUseHTMLString: true,\n                message: '',\n                type: 'success'\n              })\n              this.exportRecordDialogVisible = false\n            }\n          }\n        )\n      }).catch(e => {\n        console.log(e)\n      })\n    },\n    onSelectedSheetChange(e) {\n      this.dialogLoading = true\n      if (e === 1) { // 发布弹窗\n        this.listLoading = true\n        this.getExcelSheetContent(this.excel.id, this.sleectedSheet)\n        this.getExcelSheetFromDB(this.excel.id, this.sleectedSheet)\n        this.listLoading = false\n      } else if (e === 2) { // 同步弹窗\n        this.getExcelSheetContent(this.excel.id, this.sleectedSheet)\n        this.getExcelSheetFromProd(this.excel.id, this.sleectedSheet)\n      } else if (e === 3) { //发布记录弹窗\n        this.selectRecordId = ''\n        this.codeDiff.beforeExportRecordStr = ''\n        this.codeDiff.exportRecordStr = ''\n        this.recordList = []\n        this.getRecordList()\n      }\n    },\n    onSelectRecordChange(e) {\n      console.log('select record changed')\n      this.refreshRecordContent()\n    },\n    confirmExport() {\n      if (this.exportRemark.length === 0) {\n        this.$notify({\n          title: '发布失败',\n          dangerouslyUseHTMLString: true,\n          message: '请填写发布内容',\n          type: 'error'\n        })\n        return\n      }\n      var text = '您当前选择的配置表是 \\\"' + this.sleectedSheet + '\\\", 修改备注为 \\\"'+this.exportRemark + '\\\", 确认发布吗？'\n      if (!this.groupInfo.IsDev) {\n        text = '当前处于正式环境, ' + text\n      }\n      MessageBox.confirm(text, '提示', {\n        confirmButtonText: '确定',\n        cancelButtonText: '取消',\n        type: 'warning'\n      }).then(res => {\n        var params = {}\n        params.gridKey = this.excel.id\n        params.sheetName = this.sleectedSheet\n        params.remark = this.exportRemark\n        exportConfigToDB(params).then(response => {\n          if (response.code === 0) {\n            if (response.code !== 0) {\n              this.$notify({\n                title: '发布失败',\n                dangerouslyUseHTMLString: true,\n                message: response.data.msg,\n                type: 'error'\n              })\n            } else {\n              this.$notify({\n                title: '发布成功',\n                dangerouslyUseHTMLString: true,\n                message: '',\n                type: 'success'\n              })\n              this.exportDialogVisible = false\n            }\n          }\n        })\n      })\n    },\n    confirmExportProd() {\n      var params = {}\n      params.gridKey = this.excel.id\n      params.sheetName = this.sleectedSheet\n      params.gid = this.groupInfo.gid\n      syncToProd(params).then(response => {\n        if (response.code === 0) {\n          if (response.code !== 0) {\n            this.$notify({\n              title: '同步失败',\n              dangerouslyUseHTMLString: true,\n              message: response.data.msg,\n              type: 'error'\n            })\n          } else {\n            this.$notify({\n              title: '同步成功',\n              dangerouslyUseHTMLString: true,\n              message: '',\n              type: 'success'\n            })\n            this.exportProdDialogVisible = false\n          }\n        }\n      })\n    },\n    exportJsonFile() {\n      this.downloadJsonFile(this.codeDiff.beforeExportStr, this.sleectedSheet + '.json')\n    },\n    downloadJsonFile(content, filename) {\n      var eleLink = document.createElement('a')\n      eleLink.download = filename\n      eleLink.style.display = 'none'\n      // 字符内容转变成blob地址\n      var blob = new Blob([content])\n      eleLink.href = URL.createObjectURL(blob)\n      // 触发点击\n      document.body.appendChild(eleLink)\n      eleLink.click()\n      // 然后移除\n      document.body.removeChild(eleLink)\n    },\n    saveGroupConfig() {\n      groupUpdate({id: this.groupInfo.gid, groupInfo: this.groupInfo}).then(response => {\n        if (response.code !== 0) {\n          this.$notify({\n            title: '保存失败',\n            dangerouslyUseHTMLString: true,\n            message: response.data.msg,\n            type: 'error'\n          })\n        } else {\n          this.$notify({\n            title: '保存成功',\n            dangerouslyUseHTMLString: true,\n            message: '',\n            type: 'success'\n          })\n          localStorage.setItem('groupInfo', JSON.stringify(this.groupInfo))\n        }\n      })\n    },\n    uploadAvatar(e) {\n      e.preventDefault()\n      console.log(e)\n      const files = e.target.files || e.dataTransfer.files\n      if (this.checkFile(files[0])) {\n        this.setSourceImg(files[0])\n      }\n    },\n    /* ---------------------------------------------------------------*/\n    // 检测选择的文件是否合适\n    checkFile(file) {\n      const { lang, maxSize } = this\n      // 仅限图片\n      if (file.type.indexOf('image') === -1) {\n        this.hasError = true\n        this.errorMsg = lang.error.onlyImg\n        return false\n      }\n      // 超出大小\n      if (file.size / 1024 > maxSize) {\n        this.hasError = true\n        this.errorMsg = lang.error.outOfSize + maxSize + 'kb'\n        return false\n      }\n      return true\n    },\n    setSourceImg(file) {\n      const fr = new FileReader()\n      fr.onload = e => {\n        this.groupInfo.avatar = fr.result\n      }\n      fr.readAsDataURL(file)\n    },\n    inArray(arr, target) {\n      for (var i in arr) {\n        if (arr[i] === target) {\n          return true\n        }\n      }\n      return false\n    },\n    testRedisConnection(e) {\n      var params = {dsnType:1,dsn:this.groupInfo.RedisDSN,pwd:this.groupInfo.RedisPassword}\n      groupTestConnection(params).then(response => {\n        if (response.data.connected === 0 || response.data.connected === undefined) {\n          this.$notify({\n            title: 'Redis连接失败',\n            dangerouslyUseHTMLString: true,\n            message: `请检查DSN配置或者IP白名单配置`,\n            type: 'error'\n          })\n          return\n        } else {\n          this.$notify({\n            title: 'Redis连接成功',\n            dangerouslyUseHTMLString: true,\n            message: ``,\n            type: 'success'\n          })\n        }\n      })\n    },\n    testMysqlConnection() {\n      var params = {dsnType:2,dsn:this.groupInfo.MysqlDSN}\n      groupTestConnection(params).then(response => {\n        if (response.data.connected === 0 || response.data.connected === undefined) {\n          this.$notify({\n            title: 'Mysql连接失败',\n            dangerouslyUseHTMLString: true,\n            message: `请检查DSN配置或者IP白名单配置`,\n            type: 'error'\n          })\n          return\n        } else {\n          this.$notify({\n            title: 'Mysql连接成功',\n            dangerouslyUseHTMLString: true,\n            message: ``,\n            type: 'success'\n          })\n        }\n      })\n    },\n    testGRpcConnection() {\n      var params = {\n        dsnType:4,\n        dsn:    this.groupInfo.GrpcDSN,\n        appKey: this.groupInfo.GrpcAppKey,\n        appSecret: this.groupInfo.GrpcAppSecret,\n      }\n      groupTestConnection(params).then(response => {\n        if (response.data.connected === 0 || response.data.connected === undefined) {\n          this.$notify({\n            title: 'Databus连接失败',\n            dangerouslyUseHTMLString: true,\n            message: `请启动Databus服务，检查DSN和AppKey、AppSecret配置`,\n            type: 'error'\n          })\n          return\n        } else {\n          this.$notify({\n            title: 'Databus连接成功',\n            dangerouslyUseHTMLString: true,\n            message: ``,\n            type: 'success'\n          })\n        }\n      })\n    },\n    generateAppKeySecretHandler() {\n      this.$set(this.groupInfo, 'GrpcDSN', '')\n      generateAppKeySecret().then(response => {\n        if (response.data === null || response.data.appKey === '' || response.data.appSecret === '') {\n          this.$notify({\n            title: '获取失败',\n            dangerouslyUseHTMLString: true,\n            message: `请联系管理员`,\n            type: 'error'\n          })\n          return\n        } else {\n          this.$notify({\n            title: '获取成功',\n            dangerouslyUseHTMLString: true,\n            message: `请参阅文档搭建e2cdatabus服务器`,\n            type: 'success'\n          })\n          this.$set(this.groupInfo, 'GrpcAppKey', response.data.appKey)\n          this.$set(this.groupInfo, 'GrpcAppSecret', response.data.appSecret)\n        }\n      })\n    },\n    testMongodbConnection() {\n      var params = { dsnType: 3, dsn: this.groupInfo.MongodbDSN }\n      groupTestConnection(params).then(response => {\n        if (response.data.connected === 0 || response.data.connected === undefined) {\n          this.$notify({\n            title: 'Mongodb连接失败',\n            dangerouslyUseHTMLString: true,\n            message: `请检查DSN配置或者IP白名单配置`,\n            type: 'error'\n          })\n          return\n        } else {\n          this.$notify({\n            title: 'Mongodb连接成功',\n            dangerouslyUseHTMLString: true,\n            message: ``,\n            type: 'success'\n          })\n        }\n      })\n    },\n    isGroupOwner(scope) {\n      if (this.groupInfo.owner === this.uid) {\n        return this.groupInfo.owner !== scope.row.uid\n      }\n      return false\n    },\n    handleAddMember() {\n      this.addMemberdialogVisible = true\n    },\n    addMember() {\n      var exist = false\n      this.groupInfo.members.forEach(m => {\n        if (m.uid === this.searchUid) {\n          exist = true\n          return\n        }\n      })\n      if (exist) {\n        this.$notify({\n          title: '添加失败',\n          dangerouslyUseHTMLString: true,\n          message: `成员已存在`,\n          type: 'error'\n        })\n        return\n      }\n      this.groupInfo.members.push({\n        uid: this.searchUid,\n        userName: this.searchUserName,\n      })\n      this.updateGroupInfo('保存成功', '添加成员：'+this.searchUserName)\n      this.addMemberdialogVisible = false\n    },\n    handleSelect(e) {\n      this.searchUid = e.id\n    },\n    handleDeleteMember(scope) {\n      var members = []\n      this.groupInfo.members.forEach( m => {\n        if (m.uid !== scope.row.uid) {\n          members.push(m)\n        }\n      })\n      this.groupInfo.members = members\n      this.updateGroupInfo('保存成功', '删除成员：'+scope.row.userName)\n    },\n    updateGroupInfo(succTitle, sussMsg) {\n      groupUpdate({id: this.groupInfo.gid, groupInfo: this.groupInfo}).then(response => {\n        if (response.code !== 0) {\n          this.$notify({\n            title: '保存失败',\n            dangerouslyUseHTMLString: true,\n            message: response.data.msg,\n            type: 'error'\n          })\n        } else {\n          this.$notify({\n            title: succTitle,\n            dangerouslyUseHTMLString: true,\n            message: sussMsg,\n            type: 'success'\n          })\n          localStorage.setItem('groupInfo', JSON.stringify(this.groupInfo))\n        }\n      })\n    },\n    querySearchAsync(queryString, cb) {\n      var results = []\n      this.searchUid = ''\n      if (queryString === '') {\n        cb(results);\n        return\n      }\n      searchUser({name: this.searchUserName}).then(response => {\n        if (response.data.userInfos === undefined || response.data.userInfos === null) {\n          cb(results);\n          return\n        }\n        response.data.userInfos.forEach(u => {\n          results.push({ 'id':u.uid, 'value': u.userName })\n        })\n        console.log(results)\n        cb(results);\n      })\n    },\n  }\n}\n</script>\n\n<style scoped>\n  .avatar-input {\n    float: left;\n    position: absolute;\n    height: 60px;\n    width: 60px;\n    opacity: 0;\n  }\n  #group-icon {\n    float: left;\n    width: 60px;\n    height: 60px;\n    border-radius: 50%;\n    position: absolute;\n  }\n  .store-group {\n    border: 1px solid #DCDFE6;\n    border-radius: 5px;\n    padding: 10px;\n  }\n  .store-group .el-form-item {\n    margin: 10px auto;\n  }\n  .group-title {\n    text-align: center;\n    font-size: 24px;\n    font-weight: bold;\n  }\n  .operate-box {\n    padding: 10px;\n    border: 1px solid #DCDFE6;\n    /* box-shadow: 0 2px 4px 0 rgb(0 0 0 / 12%), 0 0 6px 0 rgb(0 0 0 / 4%); */\n  }\n</style>\n"]}]}