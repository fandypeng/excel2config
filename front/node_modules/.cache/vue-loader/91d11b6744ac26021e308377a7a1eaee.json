{"remainingRequest":"/Users/Fandy/workspace/e2c/front/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/Fandy/workspace/e2c/front/src/views/LuckySheet/LuckySheet.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/Fandy/workspace/e2c/front/src/views/LuckySheet/LuckySheet.vue","mtime":1611384579457},{"path":"/Users/Fandy/workspace/e2c/front/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/Fandy/workspace/e2c/front/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/Fandy/workspace/e2c/front/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/Fandy/workspace/e2c/front/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCBMdWNreUV4Y2VsIGZyb20gJ2x1Y2t5ZXhjZWwnOwppbXBvcnQgeyB0aXRsZSB9IGZyb20gJ0Avc2V0dGluZ3MnOwppbXBvcnQgeyBnZXRUb2tlbiB9IGZyb20gJ0AvdXRpbHMvYXV0aCc7CmltcG9ydCB7IG1hcEdldHRlcnMgfSBmcm9tICd2dWV4JwoKZXhwb3J0IGRlZmF1bHQgewogIG5hbWU6ICdMdWNreVNoZWV0JywKICBwcm9wczogewogICAgbXNnOiBTdHJpbmcKICB9LAogIGRhdGEoKXsKICAgIHJldHVybiB7CiAgICAgIHNlbGVjdGVkOiIiLAogICAgICBpc01hc2tTaG93OiBmYWxzZSwKICAgICAgZ3JpZEtleTogdGhpcy4kcm91dGUucGFyYW1zLm5hbWUsCiAgICB9CiAgfSwKICBjb21wdXRlZDogewogICAgLi4ubWFwR2V0dGVycyhbCiAgICAgICd1aWQnCiAgICBdKQogIH0sCiAgbW91bnRlZCgpIHsKICAgIHZhciB2bSA9IHRoaXMKICAgIC8vIEluIHNvbWUgY2FzZXMsIHlvdSBuZWVkIHRvIHVzZSAkbmV4dFRpY2sKICAgIC8vIHRoaXMuJG5leHRUaWNrKCgpID0+IHsKICAgICAgICAgICQoZnVuY3Rpb24gKCkgewogICAgICAgICAgICBsdWNreXNoZWV0LmNyZWF0ZSh7CiAgICAgICAgICAgICAgY29udGFpbmVyOiAibHVja3lzaGVldCIsCiAgICAgICAgICAgICAgYWxsb3dFZGl0OnRydWUsCiAgICAgICAgICAgICAgYWxsb3dVcGRhdGU6IHRydWUsIC8v5piv5ZCm5YWB6K6457yW6L6R5ZCO55qE5ZCO5Y+w5pu05pawCiAgICAgICAgICAgICAgZ3JpZEtleTogdm0uJHJvdXRlLnBhcmFtcy5uYW1lLAogICAgICAgICAgICAgIGxvYWRVcmw6ICJodHRwOi8vMTI3LjAuMC4xOjgwMDAvZXhjZWw/dWlkPSIrdm0udWlkKyImdG9rZW49IitnZXRUb2tlbigpLCAvLyDphY3nva5sb2FkVXJs55qE5Zyw5Z2A77yMbHVja3lzaGVldOS8mumAmui/h2FqYXjor7fmsYLooajmoLzmlbDmja7vvIzpu5jorqTovb3lhaVzdGF0dXPkuLox55qEc2hlZXTmlbDmja7kuK3nmoTmiYDmnIlkYXRh77yM5YW25L2Z55qEc2hlZXTovb3lhaXpmaRkYXRh5a2X5q615aSW55qE5omA5pyJ5a2X5q61CiAgICAgICAgICAgICAgbG9hZFNoZWV0VXJsOiAiaHR0cDovLzEyNy4wLjAuMTo4MDAwL2V4Y2VsL3NoZWV0P3VpZD0iK3ZtLnVpZCsiJnRva2VuPSIrZ2V0VG9rZW4oKSwgLy/phY3nva5sb2FkU2hlZXRVcmznmoTlnLDlnYDvvIzlj4LmlbDkuLpncmlkS2V577yI6KGo5qC85Li76ZSu77yJIOWSjCBpbmRleO+8iHNoZWV05Li76ZSu5ZCI6ZuG77yM5qC85byP5Li6WzEsMiwzXe+8ie+8jOi/lOWbnueahOaVsOaNruS4unNoZWV055qEZGF0YeWtl+auteaVsOaNrumbhuWQiAogICAgICAgICAgICAgIHVwZGF0ZVVybDogIndzOi8vMTI3LjAuMC4xOjgwMDEvdWlkLyIrdm0udWlkKyIvdG9rZW4vIitnZXRUb2tlbigpLCAvL+ihqOagvOaVsOaNrueahOabtOaWsOWcsOWdgAogICAgICAgICAgICAgIG15Rm9sZGVyVXJsOiAiIy9jb25maWcvaW5kZXgiLAogICAgICAgICAgICAgIHRpdGxlOiB2bS4kcm91dGUucGFyYW1zLm5hbWUsCiAgICAgICAgICAgICAgbGFuZzogInpoIgogICAgICAgICAgICB9KTsKICAgICAgICAgIH0pOwogICAgICAKICAgIC8vIH0pOwogIH0sCiAgZGVzdHJveWVkICgpIHsKICAgIC8vIGNvbnNvbGUubG9nKGx1Y2t5c2hlZXQpCiAgICBsdWNreXNoZWV0LmNsb3NlV2Vic29ja2V0KCkKICAgIGx1Y2t5c2hlZXQuZGVzdHJveSgpCiAgfSwKICBtZXRob2RzOnsKICAgIHVwbG9hZEV4Y2VsKGV2dCl7CiAgICAgICAgY29uc3QgZmlsZXMgPSBldnQudGFyZ2V0LmZpbGVzOwogICAgICAgIGlmKGZpbGVzPT1udWxsIHx8IGZpbGVzLmxlbmd0aD09MCl7CiAgICAgICAgICAgIGFsZXJ0KCJObyBmaWxlcyB3YWl0IGZvciBpbXBvcnQiKTsKICAgICAgICAgICAgcmV0dXJuOwogICAgICAgIH0KCiAgICAgICAgbGV0IG5hbWUgPSBmaWxlc1swXS5uYW1lOwogICAgICAgIGxldCBzdWZmaXhBcnIgPSBuYW1lLnNwbGl0KCIuIiksIHN1ZmZpeCA9IHN1ZmZpeEFycltzdWZmaXhBcnIubGVuZ3RoLTFdOwogICAgICAgIGlmKHN1ZmZpeCE9Inhsc3giKXsKICAgICAgICAgICAgYWxlcnQoIkN1cnJlbnRseSBvbmx5IHN1cHBvcnRzIHRoZSBpbXBvcnQgb2YgeGxzeCBmaWxlcyIpOwogICAgICAgICAgICByZXR1cm47CiAgICAgICAgfQogICAgICAgIEx1Y2t5RXhjZWwudHJhbnNmb3JtRXhjZWxUb0x1Y2t5KGZpbGVzWzBdLCBmdW5jdGlvbihleHBvcnRKc29uLCBsdWNreXNoZWV0ZmlsZSl7CiAgICAgICAgICAgIAogICAgICAgICAgICBpZihleHBvcnRKc29uLnNoZWV0cz09bnVsbCB8fCBleHBvcnRKc29uLnNoZWV0cy5sZW5ndGg9PTApewogICAgICAgICAgICAgICAgYWxlcnQoIkZhaWxlZCB0byByZWFkIHRoZSBjb250ZW50IG9mIHRoZSBleGNlbCBmaWxlLCBjdXJyZW50bHkgZG9lcyBub3Qgc3VwcG9ydCB4bHMgZmlsZXMhIik7CiAgICAgICAgICAgICAgICByZXR1cm47CiAgICAgICAgICAgIH0KICAgICAgICAgICAgd2luZG93Lmx1Y2t5c2hlZXQuZGVzdHJveSgpOwogICAgICAgICAgICAKICAgICAgICAgICAgd2luZG93Lmx1Y2t5c2hlZXQuY3JlYXRlKHsKICAgICAgICAgICAgICAgIGNvbnRhaW5lcjogJ2x1Y2t5c2hlZXQnLCAvL2x1Y2t5c2hlZXQgaXMgdGhlIGNvbnRhaW5lciBpZAogICAgICAgICAgICAgICAgc2hvd2luZm9iYXI6ZmFsc2UsCiAgICAgICAgICAgICAgICBkYXRhOmV4cG9ydEpzb24uc2hlZXRzLAogICAgICAgICAgICAgICAgdGl0bGU6ZXhwb3J0SnNvbi5pbmZvLm5hbWUsCiAgICAgICAgICAgICAgICB1c2VySW5mbzpleHBvcnRKc29uLmluZm8ubmFtZS5jcmVhdG9yCiAgICAgICAgICAgIH0pOwogICAgICAgIH0pOwogICAgfSwKICAgIHNlbGVjdEV4Y2VsKGV2dCl7CiAgICAgICAgY29uc3QgdmFsdWUgPSB0aGlzLnNlbGVjdGVkOwogICAgICAgIGNvbnN0IG5hbWUgPSBldnQudGFyZ2V0Lm9wdGlvbnNbZXZ0LnRhcmdldC5zZWxlY3RlZEluZGV4XS5pbm5lclRleHQ7CiAgICAgICAgCiAgICAgICAgaWYodmFsdWU9PSIiKXsKICAgICAgICAgICAgcmV0dXJuOwogICAgICAgIH0KICAgICAgICB0aGlzLmlzTWFza1Nob3cgPSB0cnVlOwoKICAgICAgICBMdWNreUV4Y2VsLnRyYW5zZm9ybUV4Y2VsVG9MdWNreUJ5VXJsKHZhbHVlLCBuYW1lLCAoZXhwb3J0SnNvbiwgbHVja3lzaGVldGZpbGUpID0+IHsKICAgICAgICAgICAgCiAgICAgICAgICAgIGlmKGV4cG9ydEpzb24uc2hlZXRzPT1udWxsIHx8IGV4cG9ydEpzb24uc2hlZXRzLmxlbmd0aD09MCl7CiAgICAgICAgICAgICAgICBhbGVydCgiRmFpbGVkIHRvIHJlYWQgdGhlIGNvbnRlbnQgb2YgdGhlIGV4Y2VsIGZpbGUsIGN1cnJlbnRseSBkb2VzIG5vdCBzdXBwb3J0IHhscyBmaWxlcyEiKTsKICAgICAgICAgICAgICAgIHJldHVybjsKICAgICAgICAgICAgfQogICAgICAgICAgICAKICAgICAgICAgICAgdGhpcy5pc01hc2tTaG93ID0gZmFsc2U7CiAgICAgICAgICAgIHdpbmRvdy5sdWNreXNoZWV0LmRlc3Ryb3koKTsKICAgICAgICAgICAgCiAgICAgICAgICAgIHdpbmRvdy5sdWNreXNoZWV0LmNyZWF0ZSh7CiAgICAgICAgICAgICAgICBjb250YWluZXI6ICdsdWNreXNoZWV0JywgLy9sdWNreXNoZWV0IGlzIHRoZSBjb250YWluZXIgaWQKICAgICAgICAgICAgICAgIHNob3dpbmZvYmFyOmZhbHNlLAogICAgICAgICAgICAgICAgZGF0YTpleHBvcnRKc29uLnNoZWV0cywKICAgICAgICAgICAgICAgIHRpdGxlOmV4cG9ydEpzb24uaW5mby5uYW1lLAogICAgICAgICAgICAgICAgdXNlckluZm86ZXhwb3J0SnNvbi5pbmZvLm5hbWUuY3JlYXRvcgogICAgICAgICAgICB9KTsKICAgICAgICB9KTsKICAgIH0sCiAgICBkb3dubG9hZEV4Y2VsKCl7CiAgICAgICAgICBjb25zdCB2YWx1ZSA9IHRoaXMuc2VsZWN0ZWQ7OwoKICAgICAgICAgIGlmKHZhbHVlLmxlbmd0aD09MCl7CiAgICAgICAgICAgICAgYWxlcnQoIlBsZWFzZSBzZWxlY3QgYSBkZW1vIGZpbGUiKTsKICAgICAgICAgICAgICByZXR1cm47CiAgICAgICAgICB9CgogICAgICAgICAgdmFyIGVsZW1JRiA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCJMdWNreS1kb3dubG9hZC1mcmFtZSIpOwogICAgICAgICAgaWYoZWxlbUlGPT1udWxsKXsKICAgICAgICAgICAgICBlbGVtSUYgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCJpZnJhbWUiKTsKICAgICAgICAgICAgICBlbGVtSUYuc3R5bGUuZGlzcGxheSA9ICJub25lIjsKICAgICAgICAgICAgICBlbGVtSUYuaWQgPSAiTHVja3ktZG93bmxvYWQtZnJhbWUiOwogICAgICAgICAgICAgIGRvY3VtZW50LmJvZHkuYXBwZW5kQ2hpbGQoZWxlbUlGKTsKICAgICAgICAgIH0KICAgICAgICAgIGVsZW1JRi5zcmMgPSB2YWx1ZTsKICAgIH0KCiAgfQp9Cg=="},{"version":3,"sources":["LuckySheet.vue"],"names":[],"mappings":";;;;;;;AAOA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA","file":"LuckySheet.vue","sourceRoot":"src/views/LuckySheet","sourcesContent":["<template>\n  <div id=\"luckysheet\"\n      style=\"margin:0px;padding:0px;position:absolute;width:100%;left: 0px;top: 0px;bottom:0px;height:100%;display:block;\"\n    ></div>\n</template>\n\n<script>\nimport LuckyExcel from 'luckyexcel';\nimport { title } from '@/settings';\nimport { getToken } from '@/utils/auth';\nimport { mapGetters } from 'vuex'\n\nexport default {\n  name: 'LuckySheet',\n  props: {\n    msg: String\n  },\n  data(){\n    return {\n      selected:\"\",\n      isMaskShow: false,\n      gridKey: this.$route.params.name,\n    }\n  },\n  computed: {\n    ...mapGetters([\n      'uid'\n    ])\n  },\n  mounted() {\n    var vm = this\n    // In some cases, you need to use $nextTick\n    // this.$nextTick(() => {\n          $(function () {\n            luckysheet.create({\n              container: \"luckysheet\",\n              allowEdit:true,\n              allowUpdate: true, //是否允许编辑后的后台更新\n              gridKey: vm.$route.params.name,\n              loadUrl: \"http://127.0.0.1:8000/excel?uid=\"+vm.uid+\"&token=\"+getToken(), // 配置loadUrl的地址，luckysheet会通过ajax请求表格数据，默认载入status为1的sheet数据中的所有data，其余的sheet载入除data字段外的所有字段\n              loadSheetUrl: \"http://127.0.0.1:8000/excel/sheet?uid=\"+vm.uid+\"&token=\"+getToken(), //配置loadSheetUrl的地址，参数为gridKey（表格主键） 和 index（sheet主键合集，格式为[1,2,3]），返回的数据为sheet的data字段数据集合\n              updateUrl: \"ws://127.0.0.1:8001/uid/\"+vm.uid+\"/token/\"+getToken(), //表格数据的更新地址\n              myFolderUrl: \"#/config/index\",\n              title: vm.$route.params.name,\n              lang: \"zh\"\n            });\n          });\n      \n    // });\n  },\n  destroyed () {\n    // console.log(luckysheet)\n    luckysheet.closeWebsocket()\n    luckysheet.destroy()\n  },\n  methods:{\n    uploadExcel(evt){\n        const files = evt.target.files;\n        if(files==null || files.length==0){\n            alert(\"No files wait for import\");\n            return;\n        }\n\n        let name = files[0].name;\n        let suffixArr = name.split(\".\"), suffix = suffixArr[suffixArr.length-1];\n        if(suffix!=\"xlsx\"){\n            alert(\"Currently only supports the import of xlsx files\");\n            return;\n        }\n        LuckyExcel.transformExcelToLucky(files[0], function(exportJson, luckysheetfile){\n            \n            if(exportJson.sheets==null || exportJson.sheets.length==0){\n                alert(\"Failed to read the content of the excel file, currently does not support xls files!\");\n                return;\n            }\n            window.luckysheet.destroy();\n            \n            window.luckysheet.create({\n                container: 'luckysheet', //luckysheet is the container id\n                showinfobar:false,\n                data:exportJson.sheets,\n                title:exportJson.info.name,\n                userInfo:exportJson.info.name.creator\n            });\n        });\n    },\n    selectExcel(evt){\n        const value = this.selected;\n        const name = evt.target.options[evt.target.selectedIndex].innerText;\n        \n        if(value==\"\"){\n            return;\n        }\n        this.isMaskShow = true;\n\n        LuckyExcel.transformExcelToLuckyByUrl(value, name, (exportJson, luckysheetfile) => {\n            \n            if(exportJson.sheets==null || exportJson.sheets.length==0){\n                alert(\"Failed to read the content of the excel file, currently does not support xls files!\");\n                return;\n            }\n            \n            this.isMaskShow = false;\n            window.luckysheet.destroy();\n            \n            window.luckysheet.create({\n                container: 'luckysheet', //luckysheet is the container id\n                showinfobar:false,\n                data:exportJson.sheets,\n                title:exportJson.info.name,\n                userInfo:exportJson.info.name.creator\n            });\n        });\n    },\n    downloadExcel(){\n          const value = this.selected;;\n\n          if(value.length==0){\n              alert(\"Please select a demo file\");\n              return;\n          }\n\n          var elemIF = document.getElementById(\"Lucky-download-frame\");\n          if(elemIF==null){\n              elemIF = document.createElement(\"iframe\");\n              elemIF.style.display = \"none\";\n              elemIF.id = \"Lucky-download-frame\";\n              document.body.appendChild(elemIF);\n          }\n          elemIF.src = value;\n    }\n\n  }\n}\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped>\nh3 {\n  margin: 40px 0 0;\n}\nul {\n  list-style-type: none;\n  padding: 0;\n}\nli {\n  display: inline-block;\n  margin: 0 10px;\n}\na {\n  color: #42b983;\n}\n</style>\n"]}]}