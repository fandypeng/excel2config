{"remainingRequest":"/Users/Fandy/workspace/e2c/front/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/Fandy/workspace/e2c/front/src/views/table/index.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/Fandy/workspace/e2c/front/src/views/table/index.vue","mtime":1614139208847},{"path":"/Users/Fandy/workspace/e2c/front/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/Fandy/workspace/e2c/front/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/Fandy/workspace/e2c/front/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/Fandy/workspace/e2c/front/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["index.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAmfile":"index.vue","sourceRoot":"src/views/table","sourcesContent":["<template>\n  <div class=\"app-container\">\n    <el-tabs type=\"border-card\">\n      <el-tab-pane label=\"配置列表\">\n        <el-button type=\"primary\" @click=\"handleAddExcel\">新增表格</el-button>\n        <el-table\n          v-loading=\"listLoading\"\n          :data=\"list\"\n          element-loading-text=\"Loading\"\n          border\n          fit\n          highlight-current-row\n          style=\"width: 100%;margin-top:30px;\"\n        >\n          <!-- <el-table-column align=\"center\" label=\"ID\" width=\"210\">\n            <template slot-scope=\"scope\">\n              {{ scope.row.id }}\n            </template>\n          </el-table-column> -->\n          <el-table-column label=\"名称\" width=\"150\">\n            <template slot-scope=\"scope\">\n                <el-link :href=\"'#/config/excel/' + scope.row.name + '/' + scope.row.id\"  type=\"primary\">{{ scope.row.name }}</el-link>\n            </template>\n          </el-table-column>\n          <el-table-column label=\"创建者\"  align=\"center\" width=\"150\">\n            <template slot-scope=\"scope\">\n              <span>{{ scope.row.owner }}</span>\n            </template>\n          </el-table-column>\n          <el-table-column label=\"备注\"  align=\"center\">\n            <template slot-scope=\"scope\">\n              {{ scope.row.remark }}\n            </template>\n          </el-table-column>\n          <el-table-column label=\"创建时间\" width=\"210\" align=\"center\">\n            <template slot-scope=\"scope\">\n              {{ scope.row.createTime | dateFilter }}\n            </template>\n          </el-table-column>\n          <el-table-column label=\"编辑时间\" width=\"210\" align=\"center\">\n            <template slot-scope=\"scope\">\n              {{ scope.row.editTime | dateFilter }}\n            </template>\n          </el-table-column>\n          <el-table-column class-name=\"status-col\" label=\"操作\" width=\"300\" align=\"center\">\n            <template slot-scope=\"scope\">\n              <el-button type=\"primary\" size=\"small\" @click=\"handleEdit(scope)\">编辑</el-button>\n              <el-button type=\"primary\" size=\"small\" @click=\"handleExport(scope)\">比对</el-button>\n              <el-button type=\"primary\" size=\"small\" @click=\"handleExport(scope)\">导表</el-button>\n              <el-button type=\"danger\" size=\"small\" @click=\"handleDelete(scope)\">删除</el-button>\n            </template>\n          </el-table-column>\n        </el-table>\n\n        <el-dialog :visible.sync=\"dialogVisible\" :title=\"dialogType==='edit'?'编辑Excel信息':'新增Excel'\">\n          <el-form :model=\"excel\" label-width=\"80px\" label-position=\"left\">\n            <el-form-item label=\"名称\">\n              <el-input v-model=\"excel.name\" placeholder=\"名称\" :disabled=\"dialogType==='edit'\" />\n            </el-form-item>\n            <el-form-item label=\"备注\">\n              <el-input\n                v-model=\"excel.remark\"\n                :autosize=\"{ minRows: 2, maxRows: 4}\"\n                type=\"textarea\"\n                placeholder=\"备注\"\n              />\n            </el-form-item>\n            <el-form-item label=\"创建者\" v-show=\"dialogType==='edit'\">\n              <el-input v-model=\"excel.owner\" placeholder=\"创建者\" disabled />\n            </el-form-item>\n          </el-form>\n          <div style=\"text-align:right;\">\n            <el-button type=\"danger\" @click=\"dialogVisible=false\">取消</el-button>\n            <el-button type=\"primary\" @click=\"confirmExcel\">保存</el-button>\n          </div>\n        </el-dialog>\n\n        <el-dialog :visible.sync=\"exportDialogVisible\" title=\"导出表格内容\">\n          <el-form :model=\"excel\" label-width=\"80px\" label-position=\"left\">\n            <el-form-item label=\"格式\">\n              <el-radio-group v-model=\"exportFormat\">\n                <el-radio label=\"json\" checked />\n            </el-radio-group>\n            </el-form-item>\n          </el-form>\n          <div style=\"text-align:right;\">\n            <el-button type=\"danger\" @click=\"exportDialogVisible=false\">取消</el-button>\n            <el-button type=\"primary\" @click=\"confirmExport\">导出</el-button>\n          </div>\n        </el-dialog>\n      </el-tab-pane>\n\n      \n      <el-tab-pane label=\"项目配置\">\n        <el-form ref=\"form\" :model=\"groupInfo\" label-width=\"120px\">\n          <el-form-item label=\"名称\">\n            <el-input v-model=\"groupInfo.name\" value=\"贪吃蛇大作战\" />\n          </el-form-item>\n          <el-form-item label=\"头像\">\n            <el-col :span=\"11\">\n              <img id=\"group-icon\" v-bind:src=\"groupInfo.avatar\" alt=\"\">\n              <input class=\"avatar-input\" type=\"file\" accept=\"image/*\" @change=\"uploadAvatar\" name=\"avatar\"   />\n            </el-col>\n          </el-form-item>\n          <br>\n          <el-form-item label=\"备注\">\n            <el-input v-model=\"groupInfo.remark\" type=\"textarea\" />\n          </el-form-item>\n          <el-form-item label=\"数据仓库\">\n            <el-checkbox-group v-model=\"groupInfo.store\" style=\"padding: 5px 15px;\">\n              <el-checkbox v-for=\"item in storeOptions\" :key=\"item.key\" :label=\"item.key\">\n                {{ item.name }}\n              </el-checkbox>\n            </el-checkbox-group>\n          </el-form-item>\n          <el-form-item v-show=\"inArray(groupInfo.store, 'Redis')\" label=\"Redis配置\" class=\"store-group\">\n            <el-form-item label=\"RedisDSN\">\n              <el-input v-model=\"groupInfo.RedisDSN\" type=\"text\" placeholder=\"172.2.1.88:6379\" />\n            </el-form-item>\n            <el-form-item label=\"密码\">\n              <el-input v-model=\"groupInfo.RedisPassword\" type=\"password\" placeholder=\"password\" />\n            </el-form-item>\n            <el-form-item label=\"KeyPrefix\">\n              <el-input v-model=\"groupInfo.RedisKeyPrefix\" type=\"text\" placeholder=\"key prefix 可不填\" />\n            </el-form-item>\n            <el-tag type=\"danger\" style=\"margin-left: 40px;\" >\n              应用可以通过订阅redis的channel：{{groupInfo.RedisKeyPrefix}}config_refresh 获取配置更新的通知，message为更新的表名\n            </el-tag>\n            <el-form-item label=\" \">\n              <el-button type=\"success\" @click=\"testRedisConnection\">测试连通性</el-button>\n            </el-form-item>\n          </el-form-item>\n          <el-form-item v-show=\"inArray(groupInfo.store, 'Mysql')\" label=\"Mysql配置\" class=\"store-group\">\n            <el-form-item label=\"MysqlDSN\">\n              <el-input v-model=\"groupInfo.MysqlDSN\" type=\"text\" placeholder=\"username:password@tcp(172.2.1.88:3306)/dbname?charset=utf8mb4\" />\n            </el-form-item>\n            <el-form-item label=\" \">\n              <el-button type=\"success\" @click=\"testMysqlConnection\">测试连通性</el-button>\n            </el-form-item>\n          </el-form-item>\n\n          <el-form-item v-show=\"inArray(groupInfo.store, 'Mongodb')\" label=\"Mongodb配置\" class=\"store-group\">\n            <el-form-item label=\"MongodbDSN\">\n              <el-input v-model=\"groupInfo.MongodbDSN\" type=\"text\" placeholder=\"mongodb://username:password@127.0.0.1:27017/?authSource=dbname\" />\n            </el-form-item>\n            <el-form-item label=\" \">\n              <el-button type=\"success\" @click=\"testMongodbConnection\">测试连通性</el-button>\n            </el-form-item>\n          </el-form-item>\n         \n          <el-form-item>\n            <el-button type=\"primary\" @click=\"saveGroupConfig\">保存</el-button>\n          </el-form-item>\n        </el-form>\n      </el-tab-pane>\n      <el-tab-pane label=\"项目成员\">\n        <el-button type=\"primary\" @click=\"handleAddMember\">添加成员</el-button>\n        <el-table\n          v-loading=\"listLoading\"\n          :data=\"groupInfo.members\"\n          element-loading-text=\"Loading\"\n          border\n          fit\n          highlight-current-row\n          style=\"width: 100%;margin-top:30px;\"\n        >\n        <!-- <el-table-column label=\"头像\"  align=\"center\" >\n            <template slot-scope=\"scope\">\n              <img :src=\"scope.row.avatar\" style=\"width:60px;border-radius:50%;\" alt=\"\">\n            </template>\n          </el-table-column> -->\n          <el-table-column label=\"昵称\"  align=\"center\" >\n            <template slot-scope=\"scope\">\n              <span>{{ scope.row.userName }}</span>\n            </template>\n          </el-table-column>\n          \n          <el-table-column class-name=\"status-col\" label=\"操作\" width=\"300\" align=\"center\">\n            <template slot-scope=\"scope\">\n              <el-button v-show=\"showDeleteMember(scope)\" type=\"danger\" size=\"small\" @click=\"handleDeleteMember(scope)\">删除</el-button>\n              <el-tag v-show=\"groupInfo.owner == scope.row.uid\">管理员</el-tag>\n            </template>\n          </el-table-column>\n        </el-table>\n\n        <el-dialog :visible.sync=\"addMemberdialogVisible\" title=\"添加成员\" width=\"500px\">\n          <el-form label-width=\"80px\" label-position=\"left\">\n            <el-form-item label=\"名称\">\n              <el-autocomplete\n                v-model=\"searchUserName\"\n                :fetch-suggestions=\"querySearchAsync\"\n                placeholder=\"请输入名称:\"\n                clearable\n                :trigger-on-focus=\"false\"\n                @select=\"handleSelect\"\n              ></el-autocomplete>\n            </el-form-item>\n          </el-form>\n          <br>\n          <div style=\"text-align:right;\">\n            <el-button type=\"danger\" @click=\"addMemberdialogVisible=false\">取消</el-button>\n            <el-button type=\"primary\" @click=\"addMember()\">保存</el-button>\n          </div>\n        </el-dialog>\n      </el-tab-pane>\n    </el-tabs>\n\n  </div>\n</template>\n\n<script>\nimport { getList, deleteExcel, updateExcel, addExcel, exportExcel } from '@/api/sheet'\nimport { searchUser } from '@/api/user'\nimport { groupUpdate, groupTestConnection } from '@/api/group'\nimport { mapGetters } from 'vuex'\nimport { deepClone } from '@/utils'\n\nconst defaultExcel = {\n  id: '',\n  name: '',\n  owner: '',\n  remark: '',\n  create_time: '',\n  update_time: '',\n}\n\nexport default {\n  computed: {\n    ...mapGetters([\n      'uid',\n      'name'\n    ])\n  },\n  filters: {\n    statusFilter(status) {\n      const statusMap = {\n        published: 'success',\n        draft: 'gray',\n        deleted: 'danger'\n      }\n      return statusMap[status]\n    },\n    dateFilter(datetime) {\n      return new Date(parseInt(datetime) * 1000).toLocaleString().replace(/:\\d{1,2}$/,' ');\n    }\n  },\n  data() {\n    return {\n      excel: Object.assign({}, defaultExcel),\n      list: [],\n      listLoading: true,\n      dialogVisible: false,\n      dialogType: 'new',\n      exportDialogVisible: false,\n      exportFormat: '',\n      form: {},\n      groupInfo: {\n        name: \"贪吃蛇大作战\",\n        remark: \"这是贪吃蛇大作战App项目\",\n        avatar: require(\"../../icons/tanchishe-icon.png\"),\n        store: ['Redis'],\n      },\n      storeOptions: [\n        {key: \"Redis\", name: \"Redis\"},\n        {key: \"Mysql\", name: \"Mysql\"},\n        {key: \"Mongodb\", name: \"Mongodb\"},\n      ],\n      addMemberdialogVisible: false,\n      searchUserName: \"\",\n      searchUid: \"\"\n    }\n  },\n  created() {\n    this.excel.owner = this.name\n    this.fetchData()\n  },\n  methods: {\n    fetchData() {\n      this.listLoading = true\n      var groupInfo = localStorage.getItem(\"groupInfo\")\n      groupInfo = JSON.parse(groupInfo)\n      console.log(groupInfo)\n      if (groupInfo == null) {\n        this.$router.push({\n          path: \"/\"\n        })\n        return\n      }\n      if (groupInfo.store == undefined || groupInfo.store == null) {\n        groupInfo.store = ['Redis']\n      }\n      this.groupInfo = groupInfo\n      getList({limit: 10, group_id: groupInfo.gid}).then(response => {\n        if (response.data.list != undefined) {\n          this.list = response.data.list\n        }\n        this.listLoading = false\n      })\n    },\n    handleAddExcel() {\n      this.excel = Object.assign({}, defaultExcel),\n      this.excel.owner = this.name\n      this.dialogType = 'new'\n      this.dialogVisible = true\n    },\n    async confirmExcel() {\n      const isEdit = this.dialogType === 'edit'\n      if (isEdit) {\n        await updateExcel(this.excel)\n        for (let index = 0; index < this.list.length; index++) {\n          if (this.list[index].id === this.excel.id) {\n            this.list.splice(index, 1, Object.assign({}, this.excel))\n            break\n          }\n        }\n      } else {\n        var params = this.excel\n        params.uid = this.uid\n        params.group_id = this.groupInfo.gid\n        const { data } = await addExcel(params)\n        this.excel.id = data.eid\n        var timestamp=new Date().getTime()\n        this.excel.createTime = timestamp/1000\n        this.excel.editTime = timestamp/1000\n        this.list.push(this.excel)\n      }\n\n      const { id, name, remark } = this.excel\n      this.dialogVisible = false\n      this.$notify({\n        title: 'Success',\n        dangerouslyUseHTMLString: true,\n        message: `\n            <div>名称: ${name}</div>\n            <div>备注: ${remark}</div>\n          `,\n        type: 'success'\n      })\n    },\n    handleEdit(scope) {\n      this.dialogType = 'edit'\n      this.dialogVisible = true\n      this.checkStrictly = true\n      this.excel = deepClone(scope.row)\n    },\n    handleDelete({$index, row}) {\n      this.$confirm('确定删除表格吗?', 'Warning', {\n        confirmButtonText: '确定',\n        cancelButtonText: '取消',\n        type: 'warning'\n      })\n      .then(async() => {\n        await deleteExcel({id: row.id, name: row.name})\n        this.list.splice($index, 1)\n        this.$message({\n          type: 'success',\n          message: '删除成功!'\n        })\n      })\n      .catch(err => { console.error(err) })\n    },\n    handleExport(scope) {\n      this.excel = deepClone(scope.row)\n      this.exportDialogVisible = true\n    },\n    async confirmExport() {\n      var params = {}\n      params.gridKey = this.excel.id\n      params.format = this.exportFormat\n      const { data } = await exportExcel(params)\n    },\n    saveGroupConfig() {\n      groupUpdate({id: this.groupInfo.gid, groupInfo: this.groupInfo}).then(response => {\n        if (response.code != 0) {\n          this.$notify({\n            title: '保存失败',\n            dangerouslyUseHTMLString: true,\n            message: response.data.msg,\n            type: 'error'\n          })\n        } else {\n          this.$notify({\n            title: '保存成功',\n            dangerouslyUseHTMLString: true,\n            message: \"\",\n            type: 'success'\n          })\n          localStorage.setItem(\"groupInfo\", JSON.stringify(this.groupInfo))\n        }\n      })\n    },\n    uploadAvatar(e) {\n      e.preventDefault()\n      console.log(e)\n      const files = e.target.files || e.dataTransfer.files\n      if (this.checkFile(files[0])) {\n        this.setSourceImg(files[0])\n      }\n    },\n    /* ---------------------------------------------------------------*/\n    // 检测选择的文件是否合适\n    checkFile(file) {\n      const { lang, maxSize } = this\n      // 仅限图片\n      if (file.type.indexOf('image') === -1) {\n        this.hasError = true\n        this.errorMsg = lang.error.onlyImg\n        return false\n      }\n      // 超出大小\n      if (file.size / 1024 > maxSize) {\n        this.hasError = true\n        this.errorMsg = lang.error.outOfSize + maxSize + 'kb'\n        return false\n      }\n      return true\n    },\n    setSourceImg(file) {\n      const fr = new FileReader()\n      fr.onload = e => {\n        this.groupInfo.avatar = fr.result\n      }\n      fr.readAsDataURL(file)\n    },\n    inArray(arr, target) {\n      for (var i in arr) {\n        if (arr[i] == target) {\n          return true\n        }\n      }\n      return false\n    },\n    testRedisConnection(e) {\n      var params = {dsnType:1,dsn:this.groupInfo.RedisDSN,pwd:this.groupInfo.RedisPassword}\n      groupTestConnection(params)\n      .then(response => {\n        if (response.data.connected == 0 || response.data.connected == undefined) {\n          this.$notify({\n            title: 'Redis连接失败',\n            dangerouslyUseHTMLString: true,\n            message: `请检查DSN配置或者IP白名单配置`,\n            type: 'error'\n          })\n          return\n        } else {\n          this.$notify({\n            title: 'Redis连接成功',\n            dangerouslyUseHTMLString: true,\n            message: ``,\n            type: 'success'\n          })\n        }\n      })\n    },\n    testMysqlConnection() {\n      var params = {dsnType:2,dsn:this.groupInfo.MysqlDSN}\n      groupTestConnection(params)\n      .then(response => {\n        if (response.data.connected == 0 || response.data.connected == undefined) {\n          this.$notify({\n            title: 'Mysql连接失败',\n            dangerouslyUseHTMLString: true,\n            message: `请检查DSN配置或者IP白名单配置`,\n            type: 'error'\n          })\n          return\n        } else {\n          this.$notify({\n            title: 'Mysql连接成功',\n            dangerouslyUseHTMLString: true,\n            message: ``,\n            type: 'success'\n          })\n        }\n      })\n    },\n    testMongodbConnection() {\n      var params = {dsnType:3,dsn:this.groupInfo.MongodbDSN}\n      groupTestConnection(params)\n      .then(response => {\n        if (response.data.connected == 0 || response.data.connected == undefined) {\n          this.$notify({\n            title: 'Mongodb连接失败',\n            dangerouslyUseHTMLString: true,\n            message: `请检查DSN配置或者IP白名单配置`,\n            type: 'error'\n          })\n          return\n        } else {\n          this.$notify({\n            title: 'Mongodb连接成功',\n            dangerouslyUseHTMLString: true,\n            message: ``,\n            type: 'success'\n          })\n        }\n      })\n    },\n    showDeleteMember(scope) {\n      if (this.groupInfo.owner == this.uid) {\n        return this.groupInfo.owner != scope.row.uid\n      }\n      return false\n    },\n    handleAddMember() {\n      this.addMemberdialogVisible = true\n    },\n    addMember() {\n      var exist = false\n      this.groupInfo.members.forEach(m => {\n        if (m.uid == this.searchUid) {\n          exist = true\n          return\n        }\n      })\n      if(exist) {\n        this.$notify({\n            title: '添加失败',\n            dangerouslyUseHTMLString: true,\n            message: `成员已存在`,\n            type: 'error'\n          })\n          return\n      }\n      this.groupInfo.members.push({\n        uid: this.searchUid,\n        userName: this.searchUserName,\n      })\n      this.updateGroupInfo(\"保存成功\", \"添加成员：\"+this.searchUserName)\n      this.addMemberdialogVisible = false\n    },\n    handleSelect(e) {\n      this.searchUid = e.id\n    },\n    handleDeleteMember(scope) {\n      var members = []\n      this.groupInfo.members.forEach( m => {\n        if (m.uid != scope.row.uid) {\n          members.push(m)\n        }\n      })\n      this.groupInfo.members = members\n      this.updateGroupInfo(\"保存成功\", \"删除成员：\"+scope.row.userName)\n    },\n    updateGroupInfo(succTitle, sussMsg) {\n      groupUpdate({id: this.groupInfo.gid, groupInfo: this.groupInfo}).then(response => {\n        if (response.code != 0) {\n          this.$notify({\n            title: '保存失败',\n            dangerouslyUseHTMLString: true,\n            message: response.data.msg,\n            type: 'error'\n          })\n        } else {\n          this.$notify({\n            title: succTitle,\n            dangerouslyUseHTMLString: true,\n            message: sussMsg,\n            type: 'success'\n          })\n          localStorage.setItem(\"groupInfo\", JSON.stringify(this.groupInfo))\n        }\n      })\n    },\n    querySearchAsync(queryString, cb) {\n      var results = []\n      this.searchUid = \"\"\n      if (queryString == \"\") {\n        cb(results);\n        return\n      }\n      searchUser({name: this.searchUserName}).then(response => {\n        if (response.data.userInfos == undefined || response.data.userInfos == null) {\n          cb(results);\n          return\n        }\n        response.data.userInfos.forEach(u => {\n          results.push({\"id\":u.uid, \"value\": u.userName})\n        })\n        console.log(results)\n        cb(results);\n      })\n    },\n  }\n}\n</script>\n\n<style scoped>\n  .avatar-input {\n    float: left;\n    position: absolute;\n    height: 60px;\n    width: 60px;\n    opacity: 0;\n  }\n  #group-icon {\n    float: left;\n    width: 60px;\n    height: 60px;\n    border-radius: 50%;\n    position: absolute;\n  }\n  .store-group {\n    border: 1px solid #DCDFE6;\n    border-radius: 5px;\n    padding: 10px;\n  }\n  .store-group .el-form-item {\n    margin: 10px auto;\n  }\n  .group-title {\n    text-align: center;\n    font-size: 24px;\n    font-weight: bold;\n  }\n</style>"]}]}