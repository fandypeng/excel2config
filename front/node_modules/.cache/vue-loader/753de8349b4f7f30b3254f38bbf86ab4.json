{"remainingRequest":"/Users/Fandy/workspace/e2c/front/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/Fandy/workspace/e2c/front/src/views/table/index.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/Fandy/workspace/e2c/front/src/views/table/index.vue","mtime":1611729185982},{"path":"/Users/Fandy/workspace/e2c/front/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/Fandy/workspace/e2c/front/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/Fandy/workspace/e2c/front/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/Fandy/workspace/e2c/front/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCB7IGdldExpc3QsIGRlbGV0ZUV4Y2VsLCB1cGRhdGVFeGNlbCwgYWRkRXhjZWwsIGV4cG9ydEV4Y2VsIH0gZnJvbSAnQC9hcGkvc2hlZXQnCmltcG9ydCB7IG1hcEdldHRlcnMgfSBmcm9tICd2dWV4JwppbXBvcnQgeyBkZWVwQ2xvbmUgfSBmcm9tICdAL3V0aWxzJwoKY29uc3QgZGVmYXVsdEV4Y2VsID0gewogIGlkOiAnJywKICBuYW1lOiAnJywKICBvd25lcjogJycsCiAgcmVtYXJrOiAnJywKICBjcmVhdGVfdGltZTogJycsCiAgdXBkYXRlX3RpbWU6ICcnLAp9CgpleHBvcnQgZGVmYXVsdCB7CiAgY29tcHV0ZWQ6IHsKICAgIC4uLm1hcEdldHRlcnMoWwogICAgICAndWlkJywKICAgICAgJ25hbWUnCiAgICBdKQogIH0sCiAgZmlsdGVyczogewogICAgc3RhdHVzRmlsdGVyKHN0YXR1cykgewogICAgICBjb25zdCBzdGF0dXNNYXAgPSB7CiAgICAgICAgcHVibGlzaGVkOiAnc3VjY2VzcycsCiAgICAgICAgZHJhZnQ6ICdncmF5JywKICAgICAgICBkZWxldGVkOiAnZGFuZ2VyJwogICAgICB9CiAgICAgIHJldHVybiBzdGF0dXNNYXBbc3RhdHVzXQogICAgfSwKICAgIGRhdGVGaWx0ZXIoZGF0ZXRpbWUpIHsKICAgICAgcmV0dXJuIG5ldyBEYXRlKHBhcnNlSW50KGRhdGV0aW1lKSAqIDEwMDApLnRvTG9jYWxlU3RyaW5nKCkucmVwbGFjZSgvOlxkezEsMn0kLywnICcpOwogICAgfQogIH0sCiAgZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIGV4Y2VsOiBPYmplY3QuYXNzaWduKHt9LCBkZWZhdWx0RXhjZWwpLAogICAgICBsaXN0OiBbXSwKICAgICAgbGlzdExvYWRpbmc6IHRydWUsCiAgICAgIGRpYWxvZ1Zpc2libGU6IGZhbHNlLAogICAgICBkaWFsb2dUeXBlOiAnbmV3JywKICAgICAgZXhwb3J0RGlhbG9nVmlzaWJsZTogZmFsc2UsCiAgICAgIGV4cG9ydEZvcm1hdDogJycsCiAgICB9CiAgfSwKICBjcmVhdGVkKCkgewogICAgdGhpcy5leGNlbC5vd25lciA9IHRoaXMubmFtZQogICAgdGhpcy5mZXRjaERhdGEoKQogIH0sCiAgbWV0aG9kczogewogICAgZmV0Y2hEYXRhKCkgewogICAgICB0aGlzLmxpc3RMb2FkaW5nID0gdHJ1ZQogICAgICBnZXRMaXN0KHtsaW1pdDogMTB9KS50aGVuKHJlc3BvbnNlID0+IHsKICAgICAgICBpZiAocmVzcG9uc2UuZGF0YS5saXN0ICE9IHVuZGVmaW5lZCkgewogICAgICAgICAgdGhpcy5saXN0ID0gcmVzcG9uc2UuZGF0YS5saXN0CiAgICAgICAgfQogICAgICAgIHRoaXMubGlzdExvYWRpbmcgPSBmYWxzZQogICAgICB9KQogICAgfSwKICAgIGhhbmRsZUFkZEV4Y2VsKCkgewogICAgICB0aGlzLmV4Y2VsID0gT2JqZWN0LmFzc2lnbih7fSwgZGVmYXVsdEV4Y2VsKSwKICAgICAgdGhpcy5leGNlbC5vd25lciA9IHRoaXMubmFtZQogICAgICB0aGlzLmRpYWxvZ1R5cGUgPSAnbmV3JwogICAgICB0aGlzLmRpYWxvZ1Zpc2libGUgPSB0cnVlCiAgICB9LAogICAgYXN5bmMgY29uZmlybUV4Y2VsKCkgewogICAgICBjb25zdCBpc0VkaXQgPSB0aGlzLmRpYWxvZ1R5cGUgPT09ICdlZGl0JwogICAgICBpZiAoaXNFZGl0KSB7CiAgICAgICAgYXdhaXQgdXBkYXRlRXhjZWwodGhpcy5leGNlbCkKICAgICAgICBmb3IgKGxldCBpbmRleCA9IDA7IGluZGV4IDwgdGhpcy5saXN0Lmxlbmd0aDsgaW5kZXgrKykgewogICAgICAgICAgaWYgKHRoaXMubGlzdFtpbmRleF0uaWQgPT09IHRoaXMuZXhjZWwuaWQpIHsKICAgICAgICAgICAgdGhpcy5saXN0LnNwbGljZShpbmRleCwgMSwgT2JqZWN0LmFzc2lnbih7fSwgdGhpcy5leGNlbCkpCiAgICAgICAgICAgIGJyZWFrCiAgICAgICAgICB9CiAgICAgICAgfQogICAgICB9IGVsc2UgewogICAgICAgIHZhciBwYXJhbXMgPSB0aGlzLmV4Y2VsCiAgICAgICAgcGFyYW1zLnVpZCA9IHRoaXMudWlkCiAgICAgICAgY29uc3QgeyBkYXRhIH0gPSBhd2FpdCBhZGRFeGNlbChwYXJhbXMpCiAgICAgICAgdGhpcy5leGNlbC5pZCA9IGRhdGEuaWQKICAgICAgICB0aGlzLmxpc3QucHVzaCh0aGlzLmV4Y2VsKQogICAgICB9CgogICAgICBjb25zdCB7IGlkLCBuYW1lLCByZW1hcmsgfSA9IHRoaXMuZXhjZWwKICAgICAgdGhpcy5kaWFsb2dWaXNpYmxlID0gZmFsc2UKICAgICAgdGhpcy4kbm90aWZ5KHsKICAgICAgICB0aXRsZTogJ1N1Y2Nlc3MnLAogICAgICAgIGRhbmdlcm91c2x5VXNlSFRNTFN0cmluZzogdHJ1ZSwKICAgICAgICBtZXNzYWdlOiBgCiAgICAgICAgICAgIDxkaXY+5ZCN56ewOiAke25hbWV9PC9kaXY+CiAgICAgICAgICAgIDxkaXY+5aSH5rOoOiAke3JlbWFya308L2Rpdj4KICAgICAgICAgIGAsCiAgICAgICAgdHlwZTogJ3N1Y2Nlc3MnCiAgICAgIH0pCiAgICB9LAogICAgaGFuZGxlRWRpdChzY29wZSkgewogICAgICB0aGlzLmRpYWxvZ1R5cGUgPSAnZWRpdCcKICAgICAgdGhpcy5kaWFsb2dWaXNpYmxlID0gdHJ1ZQogICAgICB0aGlzLmNoZWNrU3RyaWN0bHkgPSB0cnVlCiAgICAgIHRoaXMuZXhjZWwgPSBkZWVwQ2xvbmUoc2NvcGUucm93KQogICAgfSwKICAgIGhhbmRsZURlbGV0ZSh7JGluZGV4LCByb3d9KSB7CiAgICAgIHRoaXMuJGNvbmZpcm0oJ+ehruWumuWIoOmZpOihqOagvOWQlz8nLCAnV2FybmluZycsIHsKICAgICAgICBjb25maXJtQnV0dG9uVGV4dDogJ+ehruWumicsCiAgICAgICAgY2FuY2VsQnV0dG9uVGV4dDogJ+WPlua2iCcsCiAgICAgICAgdHlwZTogJ3dhcm5pbmcnCiAgICAgIH0pCiAgICAgIC50aGVuKGFzeW5jKCkgPT4gewogICAgICAgIGF3YWl0IGRlbGV0ZUV4Y2VsKHtpZDogcm93LmlkLCBuYW1lOiByb3cubmFtZX0pCiAgICAgICAgdGhpcy5saXN0LnNwbGljZSgkaW5kZXgsIDEpCiAgICAgICAgdGhpcy4kbWVzc2FnZSh7CiAgICAgICAgICB0eXBlOiAnc3VjY2VzcycsCiAgICAgICAgICBtZXNzYWdlOiAn5Yig6Zmk5oiQ5YqfIScKICAgICAgICB9KQogICAgICB9KQogICAgICAuY2F0Y2goZXJyID0+IHsgY29uc29sZS5lcnJvcihlcnIpIH0pCiAgICB9LAogICAgaGFuZGxlRXhwb3J0KHNjb3BlKSB7CiAgICAgIHRoaXMuZXhjZWwgPSBkZWVwQ2xvbmUoc2NvcGUucm93KQogICAgICB0aGlzLmV4cG9ydERpYWxvZ1Zpc2libGUgPSB0cnVlCiAgICB9LAogICAgYXN5bmMgY29uZmlybUV4cG9ydCgpIHsKICAgICAgdmFyIHBhcmFtcyA9IHt9CiAgICAgIHBhcmFtcy5ncmlkS2V5ID0gdGhpcy5leGNlbC5uYW1lCiAgICAgIHBhcmFtcy5mb3JtYXQgPSB0aGlzLmV4cG9ydEZvcm1hdAogICAgICBjb25zdCB7IGRhdGEgfSA9IGF3YWl0IGV4cG9ydEV4Y2VsKHBhcmFtcykKICAgIH0KICB9Cn0K"},{"version":3,"sources":["index.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA+FA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"index.vue","sourceRoot":"src/views/table","sourcesContent":["<template>\n  <div class=\"app-container\">\n\n    <el-button type=\"primary\" @click=\"handleAddExcel\">新增表格</el-button>\n\n    <el-table\n      v-loading=\"listLoading\"\n      :data=\"list\"\n      element-loading-text=\"Loading\"\n      border\n      fit\n      highlight-current-row\n      style=\"width: 100%;margin-top:30px;\"\n    >\n      <!-- <el-table-column align=\"center\" label=\"ID\" width=\"210\">\n        <template slot-scope=\"scope\">\n          {{ scope.row.id }}\n        </template>\n      </el-table-column> -->\n      <el-table-column label=\"名称\" width=\"150\">\n        <template slot-scope=\"scope\">\n            <el-link :href=\"'#/config/excel/' + scope.row.name\" type=\"primary\">{{ scope.row.name }}</el-link>\n        </template>\n      </el-table-column>\n      <el-table-column label=\"创建者\"  align=\"center\" width=\"150\">\n        <template slot-scope=\"scope\">\n          <span>{{ scope.row.owner }}</span>\n        </template>\n      </el-table-column>\n      <el-table-column label=\"备注\"  align=\"center\">\n        <template slot-scope=\"scope\">\n          {{ scope.row.remark }}\n        </template>\n      </el-table-column>\n      <el-table-column label=\"创建时间\" width=\"210\" align=\"center\">\n        <template slot-scope=\"scope\">\n          {{ scope.row.createTime | dateFilter }}\n        </template>\n      </el-table-column>\n      <el-table-column label=\"编辑时间\" width=\"210\" align=\"center\">\n        <template slot-scope=\"scope\">\n          {{ scope.row.editTime | dateFilter }}\n        </template>\n      </el-table-column>\n      <el-table-column class-name=\"status-col\" label=\"操作\" width=\"300\" align=\"center\">\n        <template slot-scope=\"scope\">\n          <el-button type=\"primary\" size=\"small\" @click=\"handleEdit(scope)\">编辑</el-button>\n          <el-button type=\"primary\" size=\"small\" @click=\"handleExport(scope)\">比对</el-button>\n          <el-button type=\"primary\" size=\"small\" @click=\"handleExport(scope)\">导表</el-button>\n          <el-button type=\"danger\" size=\"small\" @click=\"handleDelete(scope)\">删除</el-button>\n        </template>\n      </el-table-column>\n    </el-table>\n\n    <el-dialog :visible.sync=\"dialogVisible\" :title=\"dialogType==='edit'?'编辑Excel信息':'新增Excel'\">\n      <el-form :model=\"excel\" label-width=\"80px\" label-position=\"left\">\n        <el-form-item label=\"名称\">\n          <el-input v-model=\"excel.name\" placeholder=\"名称\" :disabled=\"dialogType==='edit'\" />\n        </el-form-item>\n        <el-form-item label=\"备注\">\n          <el-input\n            v-model=\"excel.remark\"\n            :autosize=\"{ minRows: 2, maxRows: 4}\"\n            type=\"textarea\"\n            placeholder=\"备注\"\n          />\n        </el-form-item>\n        <el-form-item label=\"创建者\" v-show=\"dialogType==='edit'\">\n          <el-input v-model=\"excel.owner\" placeholder=\"创建者\" disabled />\n        </el-form-item>\n      </el-form>\n      <div style=\"text-align:right;\">\n        <el-button type=\"danger\" @click=\"dialogVisible=false\">取消</el-button>\n        <el-button type=\"primary\" @click=\"confirmExcel\">保存</el-button>\n      </div>\n    </el-dialog>\n\n    <el-dialog :visible.sync=\"exportDialogVisible\" title=\"导出表格内容\">\n      <el-form :model=\"excel\" label-width=\"80px\" label-position=\"left\">\n        <el-form-item label=\"格式\">\n          <el-radio-group v-model=\"exportFormat\">\n            <el-radio label=\"json\" checked />\n        </el-radio-group>\n        </el-form-item>\n      </el-form>\n      <div style=\"text-align:right;\">\n        <el-button type=\"danger\" @click=\"exportDialogVisible=false\">取消</el-button>\n        <el-button type=\"primary\" @click=\"confirmExport\">导出</el-button>\n      </div>\n    </el-dialog>\n\n  </div>\n</template>\n\n<script>\nimport { getList, deleteExcel, updateExcel, addExcel, exportExcel } from '@/api/sheet'\nimport { mapGetters } from 'vuex'\nimport { deepClone } from '@/utils'\n\nconst defaultExcel = {\n  id: '',\n  name: '',\n  owner: '',\n  remark: '',\n  create_time: '',\n  update_time: '',\n}\n\nexport default {\n  computed: {\n    ...mapGetters([\n      'uid',\n      'name'\n    ])\n  },\n  filters: {\n    statusFilter(status) {\n      const statusMap = {\n        published: 'success',\n        draft: 'gray',\n        deleted: 'danger'\n      }\n      return statusMap[status]\n    },\n    dateFilter(datetime) {\n      return new Date(parseInt(datetime) * 1000).toLocaleString().replace(/:\\d{1,2}$/,' ');\n    }\n  },\n  data() {\n    return {\n      excel: Object.assign({}, defaultExcel),\n      list: [],\n      listLoading: true,\n      dialogVisible: false,\n      dialogType: 'new',\n      exportDialogVisible: false,\n      exportFormat: '',\n    }\n  },\n  created() {\n    this.excel.owner = this.name\n    this.fetchData()\n  },\n  methods: {\n    fetchData() {\n      this.listLoading = true\n      getList({limit: 10}).then(response => {\n        if (response.data.list != undefined) {\n          this.list = response.data.list\n        }\n        this.listLoading = false\n      })\n    },\n    handleAddExcel() {\n      this.excel = Object.assign({}, defaultExcel),\n      this.excel.owner = this.name\n      this.dialogType = 'new'\n      this.dialogVisible = true\n    },\n    async confirmExcel() {\n      const isEdit = this.dialogType === 'edit'\n      if (isEdit) {\n        await updateExcel(this.excel)\n        for (let index = 0; index < this.list.length; index++) {\n          if (this.list[index].id === this.excel.id) {\n            this.list.splice(index, 1, Object.assign({}, this.excel))\n            break\n          }\n        }\n      } else {\n        var params = this.excel\n        params.uid = this.uid\n        const { data } = await addExcel(params)\n        this.excel.id = data.id\n        this.list.push(this.excel)\n      }\n\n      const { id, name, remark } = this.excel\n      this.dialogVisible = false\n      this.$notify({\n        title: 'Success',\n        dangerouslyUseHTMLString: true,\n        message: `\n            <div>名称: ${name}</div>\n            <div>备注: ${remark}</div>\n          `,\n        type: 'success'\n      })\n    },\n    handleEdit(scope) {\n      this.dialogType = 'edit'\n      this.dialogVisible = true\n      this.checkStrictly = true\n      this.excel = deepClone(scope.row)\n    },\n    handleDelete({$index, row}) {\n      this.$confirm('确定删除表格吗?', 'Warning', {\n        confirmButtonText: '确定',\n        cancelButtonText: '取消',\n        type: 'warning'\n      })\n      .then(async() => {\n        await deleteExcel({id: row.id, name: row.name})\n        this.list.splice($index, 1)\n        this.$message({\n          type: 'success',\n          message: '删除成功!'\n        })\n      })\n      .catch(err => { console.error(err) })\n    },\n    handleExport(scope) {\n      this.excel = deepClone(scope.row)\n      this.exportDialogVisible = true\n    },\n    async confirmExport() {\n      var params = {}\n      params.gridKey = this.excel.name\n      params.format = this.exportFormat\n      const { data } = await exportExcel(params)\n    }\n  }\n}\n</script>\n"]}]}