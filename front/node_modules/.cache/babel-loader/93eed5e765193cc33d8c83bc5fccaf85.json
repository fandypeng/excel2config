{"remainingRequest":"/Users/Fandy/workspace/e2c/front/node_modules/babel-loader/lib/index.js!/Users/Fandy/workspace/e2c/front/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/Fandy/workspace/e2c/front/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/Fandy/workspace/e2c/front/src/views/table/index.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/Fandy/workspace/e2c/front/src/views/table/index.vue","mtime":1611729185982},{"path":"/Users/Fandy/workspace/e2c/front/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/Fandy/workspace/e2c/front/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/Fandy/workspace/e2c/front/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/Fandy/workspace/e2c/front/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["index.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div class=\"app-container\">\n\n    <el-button type=\"primary\" @click=\"handleAddExcel\">新增表格</el-button>\n\n    <el-table\n      v-loading=\"listLoading\"\n      :data=\"list\"\n      element-loading-text=\"Loading\"\n      border\n      fit\n      highlight-current-row\n      style=\"width: 100%;margin-top:30px;\"\n    >\n      <!-- <el-table-column align=\"center\" label=\"ID\" width=\"210\">\n        <template slot-scope=\"scope\">\n          {{ scope.row.id }}\n        </template>\n      </el-table-column> -->\n      <el-table-column label=\"名称\" width=\"150\">\n        <template slot-scope=\"scope\">\n            <el-link :href=\"'#/config/excel/' + scope.row.name\" type=\"primary\">{{ scope.row.name }}</el-link>\n        </template>\n      </el-table-column>\n      <el-table-column label=\"创建者\"  align=\"center\" width=\"150\">\n        <template slot-scope=\"scope\">\n          <span>{{ scope.row.owner }}</span>\n        </template>\n      </el-table-column>\n      <el-table-column label=\"备注\"  align=\"center\">\n        <template slot-scope=\"scope\">\n          {{ scope.row.remark }}\n        </template>\n      </el-table-column>\n      <el-table-column label=\"创建时间\" width=\"210\" align=\"center\">\n        <template slot-scope=\"scope\">\n          {{ scope.row.createTime | dateFilter }}\n        </template>\n      </el-table-column>\n      <el-table-column label=\"编辑时间\" width=\"210\" align=\"center\">\n        <template slot-scope=\"scope\">\n          {{ scope.row.editTime | dateFilter }}\n        </template>\n      </el-table-column>\n      <el-table-column class-name=\"status-col\" label=\"操作\" width=\"300\" align=\"center\">\n        <template slot-scope=\"scope\">\n          <el-button type=\"primary\" size=\"small\" @click=\"handleEdit(scope)\">编辑</el-button>\n          <el-button type=\"primary\" size=\"small\" @click=\"handleExport(scope)\">比对</el-button>\n          <el-button type=\"primary\" size=\"small\" @click=\"handleExport(scope)\">导表</el-button>\n          <el-button type=\"danger\" size=\"small\" @click=\"handleDelete(scope)\">删除</el-button>\n        </template>\n      </el-table-column>\n    </el-table>\n\n    <el-dialog :visible.sync=\"dialogVisible\" :title=\"dialogType==='edit'?'编辑Excel信息':'新增Excel'\">\n      <el-form :model=\"excel\" label-width=\"80px\" label-position=\"left\">\n        <el-form-item label=\"名称\">\n          <el-input v-model=\"excel.name\" placeholder=\"名称\" :disabled=\"dialogType==='edit'\" />\n        </el-form-item>\n        <el-form-item label=\"备注\">\n          <el-input\n            v-model=\"excel.remark\"\n            :autosize=\"{ minRows: 2, maxRows: 4}\"\n            type=\"textarea\"\n            placeholder=\"备注\"\n          />\n        </el-form-item>\n        <el-form-item label=\"创建者\" v-show=\"dialogType==='edit'\">\n          <el-input v-model=\"excel.owner\" placeholder=\"创建者\" disabled />\n        </el-form-item>\n      </el-form>\n      <div style=\"text-align:right;\">\n        <el-button type=\"danger\" @click=\"dialogVisible=false\">取消</el-button>\n        <el-button type=\"primary\" @click=\"confirmExcel\">保存</el-button>\n      </div>\n    </el-dialog>\n\n    <el-dialog :visible.sync=\"exportDialogVisible\" title=\"导出表格内容\">\n      <el-form :model=\"excel\" label-width=\"80px\" label-position=\"left\">\n        <el-form-item label=\"格式\">\n          <el-radio-group v-model=\"exportFormat\">\n            <el-radio label=\"json\" checked />\n        </el-radio-group>\n        </el-form-item>\n      </el-form>\n      <div style=\"text-align:right;\">\n        <el-button type=\"danger\" @click=\"exportDialogVisible=false\">取消</el-button>\n        <el-button type=\"primary\" @click=\"confirmExport\">导出</el-button>\n      </div>\n    </el-dialog>\n\n  </div>\n</template>\n\n<script>\nimport { getList, deleteExcel, updateExcel, addExcel, exportExcel } from '@/api/sheet'\nimport { mapGetters } from 'vuex'\nimport { deepClone } from '@/utils'\n\nconst defaultExcel = {\n  id: '',\n  name: '',\n  owner: '',\n  remark: '',\n  create_time: '',\n  update_time: '',\n}\n\nexport default {\n  computed: {\n    ...mapGetters([\n      'uid',\n      'name'\n    ])\n  },\n  filters: {\n    statusFilter(status) {\n      const statusMap = {\n        published: 'success',\n        draft: 'gray',\n        deleted: 'danger'\n      }\n      return statusMap[status]\n    },\n    dateFilter(datetime) {\n      return new Date(parseInt(datetime) * 1000).toLocaleString().replace(/:\\d{1,2}$/,' ');\n    }\n  },\n  data() {\n    return {\n      excel: Object.assign({}, defaultExcel),\n      list: [],\n      listLoading: true,\n      dialogVisible: false,\n      dialogType: 'new',\n      exportDialogVisible: false,\n      exportFormat: '',\n    }\n  },\n  created() {\n    this.excel.owner = this.name\n    this.fetchData()\n  },\n  methods: {\n    fetchData() {\n      this.listLoading = true\n      getList({limit: 10}).then(response => {\n        if (response.data.list != undefined) {\n          this.list = response.data.list\n        }\n        this.listLoading = false\n      })\n    },\n    handleAddExcel() {\n      this.excel = Object.assign({}, defaultExcel),\n      this.excel.owner = this.name\n      this.dialogType = 'new'\n      this.dialogVisible = true\n    },\n    async confirmExcel() {\n      const isEdit = this.dialogType === 'edit'\n      if (isEdit) {\n        await updateExcel(this.excel)\n        for (let index = 0; index < this.list.length; index++) {\n          if (this.list[index].id === this.excel.id) {\n            this.list.splice(index, 1, Object.assign({}, this.excel))\n            break\n          }\n        }\n      } else {\n        var params = this.excel\n        params.uid = this.uid\n        const { data } = await addExcel(params)\n        this.excel.id = data.id\n        this.list.push(this.excel)\n      }\n\n      const { id, name, remark } = this.excel\n      this.dialogVisible = false\n      this.$notify({\n        title: 'Success',\n        dangerouslyUseHTMLString: true,\n        message: `\n            <div>名称: ${name}</div>\n            <div>备注: ${remark}</div>\n          `,\n        type: 'success'\n      })\n    },\n    handleEdit(scope) {\n      this.dialogType = 'edit'\n      this.dialogVisible = true\n      this.checkStrictly = true\n      this.excel = deepClone(scope.row)\n    },\n    handleDelete({$index, row}) {\n      this.$confirm('确定删除表格吗?', 'Warning', {\n        confirmButtonText: '确定',\n        cancelButtonText: '取消',\n        type: 'warning'\n      })\n      .then(async() => {\n        await deleteExcel({id: row.id, name: row.name})\n        this.list.splice($index, 1)\n        this.$message({\n          type: 'success',\n          message: '删除成功!'\n        })\n      })\n      .catch(err => { console.error(err) })\n    },\n    handleExport(scope) {\n      this.excel = deepClone(scope.row)\n      this.exportDialogVisible = true\n    },\n    async confirmExport() {\n      var params = {}\n      params.gridKey = this.excel.name\n      params.format = this.exportFormat\n      const { data } = await exportExcel(params)\n    }\n  }\n}\n</script>\n"],"sourceRoot":"src/views/table"}]}